{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { useEffect, useRef, useState } from 'react';\nimport { isActorWithState } from './useActor';\nimport { getServiceSnapshot } from './useService';\n\nfunction isService(actor) {\n  return 'state' in actor && 'machine' in actor;\n}\n\nvar defaultCompare = function (a, b) {\n  return a === b;\n};\n\nvar defaultGetSnapshot = function (a) {\n  return isService(a) ? getServiceSnapshot(a) : isActorWithState(a) ? a.state : undefined;\n};\n\nexport function useSelector(actor, selector, compare, getSnapshot) {\n  if (compare === void 0) {\n    compare = defaultCompare;\n  }\n\n  if (getSnapshot === void 0) {\n    getSnapshot = defaultGetSnapshot;\n  }\n\n  var _a = __read(useState(function () {\n    return selector(getSnapshot(actor));\n  }), 2),\n      selected = _a[0],\n      setSelected = _a[1];\n\n  var selectedRef = useRef(selected);\n  useEffect(function () {\n    var updateSelectedIfChanged = function (nextSelected) {\n      if (!compare(selectedRef.current, nextSelected)) {\n        setSelected(nextSelected);\n        selectedRef.current = nextSelected;\n      }\n    };\n\n    var initialSelected = selector(getSnapshot(actor));\n    updateSelectedIfChanged(initialSelected);\n    var sub = actor.subscribe(function (emitted) {\n      var nextSelected = selector(emitted);\n      updateSelectedIfChanged(nextSelected);\n    });\n    return function () {\n      return sub.unsubscribe();\n    };\n  }, [selector, compare]);\n  return selected;\n}","map":{"version":3,"sources":["/Users/macbook/_myProject/campustaxi-2-webview/node_modules/@xstate/react/es/useSelector.js"],"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","useEffect","useRef","useState","isActorWithState","getServiceSnapshot","isService","actor","defaultCompare","a","b","defaultGetSnapshot","state","undefined","useSelector","selector","compare","getSnapshot","_a","selected","setSelected","selectedRef","updateSelectedIfChanged","nextSelected","current","initialSelected","sub","subscribe","emitted","unsubscribe"],"mappings":"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","sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { useEffect, useRef, useState } from 'react';\nimport { isActorWithState } from './useActor';\nimport { getServiceSnapshot } from './useService';\nfunction isService(actor) {\n    return 'state' in actor && 'machine' in actor;\n}\nvar defaultCompare = function (a, b) { return a === b; };\nvar defaultGetSnapshot = function (a) {\n    return isService(a)\n        ? getServiceSnapshot(a)\n        : isActorWithState(a)\n            ? a.state\n            : undefined;\n};\nexport function useSelector(actor, selector, compare, getSnapshot) {\n    if (compare === void 0) { compare = defaultCompare; }\n    if (getSnapshot === void 0) { getSnapshot = defaultGetSnapshot; }\n    var _a = __read(useState(function () { return selector(getSnapshot(actor)); }), 2), selected = _a[0], setSelected = _a[1];\n    var selectedRef = useRef(selected);\n    useEffect(function () {\n        var updateSelectedIfChanged = function (nextSelected) {\n            if (!compare(selectedRef.current, nextSelected)) {\n                setSelected(nextSelected);\n                selectedRef.current = nextSelected;\n            }\n        };\n        var initialSelected = selector(getSnapshot(actor));\n        updateSelectedIfChanged(initialSelected);\n        var sub = actor.subscribe(function (emitted) {\n            var nextSelected = selector(emitted);\n            updateSelectedIfChanged(nextSelected);\n        });\n        return function () { return sub.unsubscribe(); };\n    }, [selector, compare]);\n    return selected;\n}\n"]},"metadata":{},"sourceType":"module"}