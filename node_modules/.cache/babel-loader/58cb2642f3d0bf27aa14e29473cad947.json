{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CImage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { SCREEN_WIDTH } from \"./../../../style/index\";\nimport { commandInputListState, CropInit, CropState } from \"./../../recoil\";\nimport { useRecoilState } from \"recoil\";\nimport { Icon } from \"./../../common/Icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const loadXHR = url => {\n  return new Promise((resolve, reject) => {\n    try {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", url);\n      xhr.responseType = \"blob\";\n\n      xhr.onerror = () => {\n        // reject(`Network error: ${event}`);\n        reject();\n      };\n\n      xhr.onload = () => {\n        if (xhr.status === 200) {\n          resolve(xhr.response);\n        } else {\n          // reject(`XHR load error: ${xhr.statusText}`);\n          reject(\"\");\n        }\n      };\n\n      xhr.send();\n    } catch (err) {\n      // reject(err.message);\n      reject(\"\");\n    }\n  });\n};\nexport const CImage = ({\n  index\n}) => {\n  _s();\n\n  const [commandInputList, setCommandInputList] = useRecoilState(commandInputListState);\n  const [crop, setCrop] = useRecoilState(CropState); // const [filepath, setFilepath] = useState({ file: \"\", previewURL: \"\" });\n\n  const [isCrop, setIsCrop] = useState(false);\n  const filepath = commandInputList[index].content; //#region 앱껏다 키고 캐쉬 초기화 시 이미지 아닌게 들어깄으면 삭제\n\n  useEffect(() => {\n    loadXHR(filepath.file).then(f => {\n      try {\n        if (typeof f.type === \"string\") console.debug(f.type.includes(\"image\"), f);\n      } catch (e) {}\n    }).catch(() => {\n      setCommandInputList([...commandInputList.slice(0, index), { ...commandInputList[index],\n        content: {\n          file: \"\",\n          previewURL: \"\"\n        }\n      }, ...commandInputList.slice(index + 1, 999)]);\n    });\n  }, []); //#endregion\n  //#region 편집 후 가져오기\n\n  useEffect(() => {\n    if (!crop.visible && isCrop) {\n      setCommandInputList([...commandInputList.slice(0, index), { ...commandInputList[index],\n        content: {\n          file: crop.file,\n          previewURL: crop.previewURL\n        }\n      }, ...commandInputList.slice(index + 1, 999)]); // setFilepath({ file: crop.file, previewURL: crop.previewURL });\n\n      setIsCrop(false);\n      setCrop(CropInit);\n    }\n  }, [crop.visible]); //#endregion\n\n  const onDeletePhoto = () => {\n    setCommandInputList([...commandInputList.slice(0, index), { ...commandInputList[index],\n      content: {\n        file: \"\",\n        previewURL: \"\"\n      }\n    }, ...commandInputList.slice(index + 1, 999)]);\n  };\n\n  const onChangeInput = e => {\n    try {\n      e.preventDefault();\n      let reader = new FileReader();\n      let file = e.target.files[0];\n\n      reader.onloadend = () => {\n        setIsCrop(true);\n        setCrop({\n          visible: true,\n          file: file,\n          previewURL: reader.result\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } catch (e) {\n      setIsCrop(false);\n      setCrop(CropInit);\n    }\n  };\n\n  const style = filepath.previewURL !== \"\" ? {\n    backgroundImage: `url(${filepath.previewURL})`,\n    backgroundColor: \"transparent\"\n  } : {\n    backgroundColor: \"rgba(0,0,0,0.1)\" //transparent\n\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: { ...style,\n          height: (SCREEN_WIDTH - 64) * 200 / 415,\n          width: SCREEN_WIDTH - 64,\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          height: 0,\n          left: filepath.previewURL == \"\" ? (SCREEN_WIDTH - 175 - 64) / 2 : (SCREEN_WIDTH - 100 - 64) / 2,\n          top: -((SCREEN_WIDTH - 64) * 200 / 415 / 2 + 15)\n        },\n        children: filepath.previewURL !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: inputFileCSSNone,\n            onClick: () => {\n              setCrop({\n                visible: true,\n                file: filepath.file,\n                previewURL: filepath.previewURL\n              });\n              setIsCrop(true);\n            },\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"faEdit\",\n              size: \"lg\",\n              color: \"rgba(73,80,87,0.5)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: { ...inputFileCSSNone,\n              marginLeft: 5\n            },\n            onClick: onDeletePhoto,\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"faTrash\",\n              size: \"lg\",\n              color: \"rgba(73,80,87,0.5)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n          style: inputFileCSS,\n          htmlFor: \"input-file\" + index,\n          children: \"\\uC0AC\\uC9C4\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"input-file\" + index,\n        value: \"\",\n        style: {\n          display: \"none\"\n        },\n        accept: \"image/*\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CImage, \"Mewbp28A74BCBMcf2mIwA1HSEWs=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c = CImage;\nconst inputFileCSSNone = {\n  padding: \"6px 12px\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  display: \"flex\",\n  backgroundColor: \"rgba(255,255,255,0.8)\",\n  borderRadius: \"20px\",\n  color: \"white\",\n  cursor: \"pointer\"\n};\nconst inputFileCSS = {\n  fontSize: 13,\n  padding: \"6px 25px\",\n  backgroundColor: \"#FF6600\",\n  borderRadius: \"4px\",\n  color: \"white\",\n  cursor: \"pointer\"\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CImage\");","map":{"version":3,"sources":["/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CImage.js"],"names":["useEffect","useState","SCREEN_WIDTH","commandInputListState","CropInit","CropState","useRecoilState","Icon","loadXHR","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","responseType","onerror","onload","status","response","send","err","CImage","index","commandInputList","setCommandInputList","crop","setCrop","isCrop","setIsCrop","filepath","content","file","then","f","type","console","debug","includes","e","catch","slice","previewURL","visible","onDeletePhoto","onChangeInput","preventDefault","reader","FileReader","target","files","onloadend","result","readAsDataURL","style","backgroundImage","backgroundColor","height","width","backgroundSize","backgroundRepeat","position","left","top","display","inputFileCSSNone","marginLeft","inputFileCSS","padding","alignItems","justifyContent","borderRadius","color","cursor","fontSize"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,qBAAT,EAAgCC,QAAhC,EAA0CC,SAA1C,QAA2D,gBAA3D;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,IAAT,QAAqB,qBAArB;;AAEA,OAAO,MAAMC,OAAO,GAAIC,GAAD,IAAO;AAC5B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAI;AACF,YAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB;AACAI,MAAAA,GAAG,CAACG,YAAJ,GAAmB,MAAnB;;AACAH,MAAAA,GAAG,CAACI,OAAJ,GAAc,MAAM;AAClB;AACAL,QAAAA,MAAM;AACP,OAHD;;AAIAC,MAAAA,GAAG,CAACK,MAAJ,GAAa,MAAM;AACjB,YAAIL,GAAG,CAACM,MAAJ,KAAe,GAAnB,EAAwB;AACtBR,UAAAA,OAAO,CAACE,GAAG,CAACO,QAAL,CAAP;AACD,SAFD,MAEO;AACL;AACAR,UAAAA,MAAM,CAAC,EAAD,CAAN;AACD;AACF,OAPD;;AAQAC,MAAAA,GAAG,CAACQ,IAAJ;AACD,KAjBD,CAiBE,OAAOC,GAAP,EAAY;AACZ;AACAV,MAAAA,MAAM,CAAC,EAAD,CAAN;AACD;AACF,GAtBM,CAAP;AAuBD,CAxBM;AA0BP,OAAO,MAAMW,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACnC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CpB,cAAc,CAACH,qBAAD,CAA9D;AACA,QAAM,CAACwB,IAAD,EAAOC,OAAP,IAAkBtB,cAAc,CAACD,SAAD,CAAtC,CAFmC,CAGnC;;AACA,QAAM,CAACwB,MAAD,EAASC,SAAT,IAAsB7B,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM8B,QAAQ,GAAGN,gBAAgB,CAACD,KAAD,CAAhB,CAAwBQ,OAAzC,CALmC,CAOnC;;AACAhC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACuB,QAAQ,CAACE,IAAV,CAAP,CACGC,IADH,CACSC,CAAD,IAAO;AACX,UAAI;AACF,YAAI,OAAOA,CAAC,CAACC,IAAT,KAAkB,QAAtB,EAAgCC,OAAO,CAACC,KAAR,CAAcH,CAAC,CAACC,IAAF,CAAOG,QAAP,CAAgB,OAAhB,CAAd,EAAwCJ,CAAxC;AACjC,OAFD,CAEE,OAAOK,CAAP,EAAU,CAAE;AACf,KALH,EAMGC,KANH,CAMS,MAAM;AACXf,MAAAA,mBAAmB,CAAC,CAClB,GAAGD,gBAAgB,CAACiB,KAAjB,CAAuB,CAAvB,EAA0BlB,KAA1B,CADe,EAElB,EAAE,GAAGC,gBAAgB,CAACD,KAAD,CAArB;AAA8BQ,QAAAA,OAAO,EAAE;AAAEC,UAAAA,IAAI,EAAE,EAAR;AAAYU,UAAAA,UAAU,EAAE;AAAxB;AAAvC,OAFkB,EAGlB,GAAGlB,gBAAgB,CAACiB,KAAjB,CAAuBlB,KAAK,GAAG,CAA/B,EAAkC,GAAlC,CAHe,CAAD,CAAnB;AAKD,KAZH;AAaD,GAdQ,EAcN,EAdM,CAAT,CARmC,CAuBnC;AACA;;AACAxB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAC2B,IAAI,CAACiB,OAAN,IAAiBf,MAArB,EAA6B;AAC3BH,MAAAA,mBAAmB,CAAC,CAClB,GAAGD,gBAAgB,CAACiB,KAAjB,CAAuB,CAAvB,EAA0BlB,KAA1B,CADe,EAElB,EAAE,GAAGC,gBAAgB,CAACD,KAAD,CAArB;AAA8BQ,QAAAA,OAAO,EAAE;AAAEC,UAAAA,IAAI,EAAEN,IAAI,CAACM,IAAb;AAAmBU,UAAAA,UAAU,EAAEhB,IAAI,CAACgB;AAApC;AAAvC,OAFkB,EAGlB,GAAGlB,gBAAgB,CAACiB,KAAjB,CAAuBlB,KAAK,GAAG,CAA/B,EAAkC,GAAlC,CAHe,CAAD,CAAnB,CAD2B,CAM3B;;AACAM,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAF,MAAAA,OAAO,CAACxB,QAAD,CAAP;AACD;AACF,GAXQ,EAWN,CAACuB,IAAI,CAACiB,OAAN,CAXM,CAAT,CAzBmC,CAqCnC;;AACA,QAAMC,aAAa,GAAG,MAAM;AAC1BnB,IAAAA,mBAAmB,CAAC,CAClB,GAAGD,gBAAgB,CAACiB,KAAjB,CAAuB,CAAvB,EAA0BlB,KAA1B,CADe,EAElB,EAAE,GAAGC,gBAAgB,CAACD,KAAD,CAArB;AAA8BQ,MAAAA,OAAO,EAAE;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYU,QAAAA,UAAU,EAAE;AAAxB;AAAvC,KAFkB,EAGlB,GAAGlB,gBAAgB,CAACiB,KAAjB,CAAuBlB,KAAK,GAAG,CAA/B,EAAkC,GAAlC,CAHe,CAAD,CAAnB;AAKD,GAND;;AAQA,QAAMsB,aAAa,GAAIN,CAAD,IAAO;AAC3B,QAAI;AACFA,MAAAA,CAAC,CAACO,cAAF;AACA,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACA,UAAIhB,IAAI,GAAGO,CAAC,CAACU,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX;;AACAH,MAAAA,MAAM,CAACI,SAAP,GAAmB,MAAM;AACvBtB,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAF,QAAAA,OAAO,CAAC;AAAEgB,UAAAA,OAAO,EAAE,IAAX;AAAiBX,UAAAA,IAAI,EAAEA,IAAvB;AAA6BU,UAAAA,UAAU,EAAEK,MAAM,CAACK;AAAhD,SAAD,CAAP;AACD,OAHD;;AAIAL,MAAAA,MAAM,CAACM,aAAP,CAAqBrB,IAArB;AACD,KATD,CASE,OAAOO,CAAP,EAAU;AACVV,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAF,MAAAA,OAAO,CAACxB,QAAD,CAAP;AACD;AACF,GAdD;;AAgBA,QAAMmD,KAAK,GACTxB,QAAQ,CAACY,UAAT,KAAwB,EAAxB,GACI;AACEa,IAAAA,eAAe,EAAG,OAAMzB,QAAQ,CAACY,UAAW,GAD9C;AAEEc,IAAAA,eAAe,EAAE;AAFnB,GADJ,GAKI;AACEA,IAAAA,eAAe,EAAE,iBADnB,CACsC;;AADtC,GANN;AASA,sBACE;AAAA,2BACE;AAAA,8BAEE;AACE,QAAA,KAAK,EAAE,EACL,GAAGF,KADE;AAELG,UAAAA,MAAM,EAAG,CAACxD,YAAY,GAAG,EAAhB,IAAsB,GAAvB,GAA8B,GAFjC;AAGLyD,UAAAA,KAAK,EAAEzD,YAAY,GAAG,EAHjB;AAIL0D,UAAAA,cAAc,EAAE,OAJX;AAKLC,UAAAA,gBAAgB,EAAE;AALb;AADT;AAAA;AAAA;AAAA;AAAA,cAFF,eAYE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,UADL;AAELJ,UAAAA,MAAM,EAAE,CAFH;AAGLK,UAAAA,IAAI,EAAEhC,QAAQ,CAACY,UAAT,IAAuB,EAAvB,GAA4B,CAACzC,YAAY,GAAG,GAAf,GAAqB,EAAtB,IAA4B,CAAxD,GAA4D,CAACA,YAAY,GAAG,GAAf,GAAqB,EAAtB,IAA4B,CAHzF;AAIL8D,UAAAA,GAAG,EAAE,EAAG,CAAC9D,YAAY,GAAG,EAAhB,IAAsB,GAAvB,GAA8B,GAA9B,GAAoC,CAApC,GAAwC,EAA1C;AAJA,SADT;AAAA,kBAQG6B,QAAQ,CAACY,UAAT,KAAwB,EAAxB,gBACC;AAAK,UAAA,KAAK,EAAE;AAAEsB,YAAAA,OAAO,EAAE;AAAX,WAAZ;AAAA,kCACE;AACE,YAAA,KAAK,EAAEC,gBADT;AAEE,YAAA,OAAO,EAAE,MAAM;AACbtC,cAAAA,OAAO,CAAC;AAAEgB,gBAAAA,OAAO,EAAE,IAAX;AAAiBX,gBAAAA,IAAI,EAAEF,QAAQ,CAACE,IAAhC;AAAsCU,gBAAAA,UAAU,EAAEZ,QAAQ,CAACY;AAA3D,eAAD,CAAP;AACAb,cAAAA,SAAS,CAAC,IAAD,CAAT;AACD,aALH;AAAA,mCAOE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAE,QAAZ;AAAsB,cAAA,IAAI,EAAE,IAA5B;AAAkC,cAAA,KAAK,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE;AAAK,YAAA,KAAK,EAAE,EAAE,GAAGoC,gBAAL;AAAuBC,cAAAA,UAAU,EAAE;AAAnC,aAAZ;AAAoD,YAAA,OAAO,EAAEtB,aAA7D;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAE,SAAZ;AAAuB,cAAA,IAAI,EAAE,IAA7B;AAAmC,cAAA,KAAK,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAgBC;AAAO,UAAA,KAAK,EAAEuB,YAAd;AAA4B,UAAA,OAAO,EAAE,eAAe5C,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxBJ;AAAA;AAAA;AAAA;AAAA,cAZF,eAyCE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAE,eAAeA,KAFrB;AAGE,QAAA,KAAK,EAAE,EAHT;AAIE,QAAA,KAAK,EAAE;AAAEyC,UAAAA,OAAO,EAAE;AAAX,SAJT;AAKE,QAAA,MAAM,EAAC,SALT;AAME,QAAA,QAAQ,EAAEnB;AANZ;AAAA;AAAA;AAAA;AAAA,cAzCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD,CA7HM;;GAAMvB,M;UACqCjB,c,EACxBA,c;;;KAFbiB,M;AA+Hb,MAAM2C,gBAAgB,GAAG;AACvBG,EAAAA,OAAO,EAAE,UADc;AAEvBC,EAAAA,UAAU,EAAE,QAFW;AAGvBC,EAAAA,cAAc,EAAE,QAHO;AAIvBN,EAAAA,OAAO,EAAE,MAJc;AAKvBR,EAAAA,eAAe,EAAE,uBALM;AAMvBe,EAAAA,YAAY,EAAE,MANS;AAOvBC,EAAAA,KAAK,EAAE,OAPgB;AAQvBC,EAAAA,MAAM,EAAE;AARe,CAAzB;AAUA,MAAMN,YAAY,GAAG;AACnBO,EAAAA,QAAQ,EAAE,EADS;AAEnBN,EAAAA,OAAO,EAAE,UAFU;AAGnBZ,EAAAA,eAAe,EAAE,SAHE;AAInBe,EAAAA,YAAY,EAAE,KAJK;AAKnBC,EAAAA,KAAK,EAAE,OALY;AAMnBC,EAAAA,MAAM,EAAE;AANW,CAArB","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { SCREEN_WIDTH } from \"./../../../style/index\";\nimport { commandInputListState, CropInit, CropState } from \"./../../recoil\";\nimport { useRecoilState } from \"recoil\";\nimport { Icon } from \"./../../common/Icon\";\n\nexport const loadXHR = (url)=>{\n  return new Promise((resolve, reject) => {\n    try {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", url);\n      xhr.responseType = \"blob\";\n      xhr.onerror = () => {\n        // reject(`Network error: ${event}`);\n        reject();\n      };\n      xhr.onload = () => {\n        if (xhr.status === 200) {\n          resolve(xhr.response);\n        } else {\n          // reject(`XHR load error: ${xhr.statusText}`);\n          reject(\"\");\n        }\n      };\n      xhr.send();\n    } catch (err) {\n      // reject(err.message);\n      reject(\"\");\n    }\n  });\n}\n\nexport const CImage = ({ index }) => {\n  const [commandInputList, setCommandInputList] = useRecoilState(commandInputListState);\n  const [crop, setCrop] = useRecoilState(CropState);\n  // const [filepath, setFilepath] = useState({ file: \"\", previewURL: \"\" });\n  const [isCrop, setIsCrop] = useState(false);\n  const filepath = commandInputList[index].content;\n\n  //#region 앱껏다 키고 캐쉬 초기화 시 이미지 아닌게 들어깄으면 삭제\n  useEffect(() => {\n    loadXHR(filepath.file)\n      .then((f) => {\n        try {\n          if (typeof f.type === \"string\") console.debug(f.type.includes(\"image\"), f);\n        } catch (e) {}\n      })\n      .catch(() => {\n        setCommandInputList([\n          ...commandInputList.slice(0, index),\n          { ...commandInputList[index], content: { file: \"\", previewURL: \"\" } },\n          ...commandInputList.slice(index + 1, 999),\n        ]);\n      });\n  }, []);\n  //#endregion\n  //#region 편집 후 가져오기\n  useEffect(() => {\n    if (!crop.visible && isCrop) {\n      setCommandInputList([\n        ...commandInputList.slice(0, index),\n        { ...commandInputList[index], content: { file: crop.file, previewURL: crop.previewURL } },\n        ...commandInputList.slice(index + 1, 999),\n      ]);\n      // setFilepath({ file: crop.file, previewURL: crop.previewURL });\n      setIsCrop(false);\n      setCrop(CropInit);\n    }\n  }, [crop.visible]);\n  //#endregion\n  const onDeletePhoto = () => {\n    setCommandInputList([\n      ...commandInputList.slice(0, index),\n      { ...commandInputList[index], content: { file: \"\", previewURL: \"\" } },\n      ...commandInputList.slice(index + 1, 999),\n    ]);\n  };\n\n  const onChangeInput = (e) => {\n    try {\n      e.preventDefault();\n      let reader = new FileReader();\n      let file = e.target.files[0];\n      reader.onloadend = () => {\n        setIsCrop(true);\n        setCrop({ visible: true, file: file, previewURL: reader.result });\n      };\n      reader.readAsDataURL(file);\n    } catch (e) {\n      setIsCrop(false);\n      setCrop(CropInit);\n    }\n  };\n\n  const style =\n    filepath.previewURL !== \"\"\n      ? {\n          backgroundImage: `url(${filepath.previewURL})`,\n          backgroundColor: \"transparent\",\n        }\n      : {\n          backgroundColor: \"rgba(0,0,0,0.1)\", //transparent\n        };\n  return (\n    <div>\n      <div>\n        {/* 바탕사진 및 바탕 임시 회색 */}\n        <div\n          style={{\n            ...style,\n            height: ((SCREEN_WIDTH - 64) * 200) / 415,\n            width: SCREEN_WIDTH - 64,\n            backgroundSize: \"cover\",\n            backgroundRepeat: \"no-repeat\",\n          }}\n        />\n        {/* 바탕사진 선택버튼 */}\n        <div\n          style={{\n            position: \"relative\",\n            height: 0,\n            left: filepath.previewURL == \"\" ? (SCREEN_WIDTH - 175 - 64) / 2 : (SCREEN_WIDTH - 100 - 64) / 2,\n            top: -(((SCREEN_WIDTH - 64) * 200) / 415 / 2 + 15),\n          }}\n        >\n          {filepath.previewURL !== \"\" ? (\n            <div style={{ display: \"flex\" }}>\n              <div\n                style={inputFileCSSNone}\n                onClick={() => {\n                  setCrop({ visible: true, file: filepath.file, previewURL: filepath.previewURL });\n                  setIsCrop(true);\n                }}\n              >\n                <Icon name={\"faEdit\"} size={\"lg\"} color={\"rgba(73,80,87,0.5)\"} />\n              </div>\n              <div style={{ ...inputFileCSSNone, marginLeft: 5 }} onClick={onDeletePhoto}>\n                <Icon name={\"faTrash\"} size={\"lg\"} color={\"rgba(73,80,87,0.5)\"} />\n              </div>\n            </div>\n          ) : (\n            <label style={inputFileCSS} htmlFor={\"input-file\" + index}>\n              사진을 선택해주세요.\n            </label>\n          )}\n        </div>\n        <input\n          type=\"file\"\n          id={\"input-file\" + index}\n          value={\"\"}\n          style={{ display: \"none\" }}\n          accept=\"image/*\"\n          onChange={onChangeInput}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst inputFileCSSNone = {\n  padding: \"6px 12px\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  display: \"flex\",\n  backgroundColor: \"rgba(255,255,255,0.8)\",\n  borderRadius: \"20px\",\n  color: \"white\",\n  cursor: \"pointer\",\n};\nconst inputFileCSS = {\n  fontSize: 13,\n  padding: \"6px 25px\",\n  backgroundColor: \"#FF6600\",\n  borderRadius: \"4px\",\n  color: \"white\",\n  cursor: \"pointer\",\n};\n"]},"metadata":{},"sourceType":"module"}