{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CTextarea.js\",\n    _s = $RefreshSig$();\n\nimport { GRAY7, SCREEN_WIDTH } from \"../../../style\";\nimport { useState, useCallback, useRef, useEffect } from \"react\";\nimport TextareaAutosize from \"react-autosize-textarea\";\nimport { offset } from \"caret-pos\";\nimport { useRecoilState } from \"recoil\";\nimport { commandInputColorState, commandInputListState, commandWindowState } from \"./../../recoil\";\nimport { getPlatform } from \"../../common/function/getPlatform\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const platform = getPlatform();\nexport const CTextarea = ({\n  style,\n  maxrows,\n  index\n}) => {\n  _s();\n\n  const [placeholder, setPlaceHolder] = useState(\"\");\n  const [rowIndex, setRowIndex] = useState({\n    height: 0,\n    index: 0\n  });\n  const [beforeInput, setBeforeInput] = useState(\"\");\n  const [commandWindow, setCommandWindow] = useRecoilState(commandWindowState);\n  const [commandInputList, setCommandInputList] = useRecoilState(commandInputListState);\n  const [commandInputColor] = useRecoilState(commandInputColorState); //setCommandInputColor\n\n  const ref = useRef();\n  const rootRef = useRef();\n  useEffect(() => {\n    console.log(rootRef);\n  }, []);\n  const onChangeInput = useCallback(e => {\n    //#region #누르면 명령어창 보여줌 || 안드로이드 설정(한번에 여러개들어옴)\n    if (e.nativeEvent.data == \"#\" || platform === \"android\" && !!e.nativeEvent.data && e.nativeEvent.data.includes(\"#\")) {\n      let {\n        left,\n        top,\n        height\n      } = offset(ref.current); //#region 가로이동 제한 & height 화면 안 넘어가게 제한\n      // 가로제한\n\n      if (left + 260 > SCREEN_WIDTH && left < 260) {\n        left = commandWindow.left;\n      } else if (SCREEN_WIDTH - left < 260 && left > 260) left -= 280; // 세로제한\n\n\n      let heightCommand = 448;\n      top -= heightCommand;\n\n      if (top < 0) {\n        heightCommand += top - height;\n        top = 0;\n      } //#endregion\n\n\n      setCommandWindow({\n        visible: true,\n        top: top,\n        left: left,\n        index: index,\n        height: heightCommand\n      });\n    } else {\n      setCommandWindow({ ...commandWindow,\n        visible: false,\n        index: -1\n      });\n    } //#region 내용업데이트\n\n\n    setCommandInputList([...commandInputList.slice(0, index), { ...commandInputList[index],\n      content: e.target.value\n    }, ...commandInputList.slice(index + 1, 999)]); //#endregion\n\n    setBeforeInput(e.target.value); //#endregion #누르면 명령어창 보여줌\n    //#region 줄 수 제한 높이체크\n\n    if (!!maxrows) {\n      if (rowIndex.index < maxrows && rowIndex.height < e.target.scrollHeight) setRowIndex({\n        index: rowIndex.index + 1,\n        height: e.target.scrollHeight\n      });else if (rowIndex.height < e.target.scrollHeight) e.target.value = e.target.value.slice(0, -1);\n      e.target.style.maxHeight = rowIndex.height - 4 + \"px\";\n      e.target.style.height = rowIndex.height - 4 + \"px\";\n    } //#endregion 줄 수 제한 높이체크\n\n  }, [rowIndex, beforeInput, commandWindow, index]);\n\n  const onBlur = () => {\n    setPlaceHolder(\"\");\n  };\n\n  const onFocus = () => {\n    if (commandWindow.index != index) {\n      if (commandWindow.visible) setCommandWindow({ ...commandWindow,\n        visible: false,\n        index: index\n      });else setCommandWindow({ ...commandWindow,\n        index: index\n      });\n    }\n\n    setPlaceHolder('명령어 사용시 \"#\"을 입력하세요.');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      contentEditable: true,\n      suppressHydrationWarning: true,\n      style: {\n        width: SCREEN_WIDTH - 60,\n        outline: 'none'\n      },\n      children: commandInputList[index].content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CTextarea, \"lDCzCfLTZOMx33wjcje6nV4OC2k=\", false, function () {\n  return [useRecoilState, useRecoilState, useRecoilState];\n});\n\n_c = CTextarea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CTextarea\");","map":{"version":3,"sources":["/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CTextarea.js"],"names":["GRAY7","SCREEN_WIDTH","useState","useCallback","useRef","useEffect","TextareaAutosize","offset","useRecoilState","commandInputColorState","commandInputListState","commandWindowState","getPlatform","platform","CTextarea","style","maxrows","index","placeholder","setPlaceHolder","rowIndex","setRowIndex","height","beforeInput","setBeforeInput","commandWindow","setCommandWindow","commandInputList","setCommandInputList","commandInputColor","ref","rootRef","console","log","onChangeInput","e","nativeEvent","data","includes","left","top","current","heightCommand","visible","slice","content","target","value","scrollHeight","maxHeight","onBlur","onFocus","width","outline"],"mappings":"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","sourcesContent":["import { GRAY7, SCREEN_WIDTH } from \"../../../style\";\nimport { useState, useCallback, useRef, useEffect } from \"react\";\nimport TextareaAutosize from \"react-autosize-textarea\";\nimport { offset } from \"caret-pos\";\nimport { useRecoilState } from \"recoil\";\nimport { commandInputColorState, commandInputListState, commandWindowState } from \"./../../recoil\";\nimport { getPlatform } from \"../../common/function/getPlatform\";\nexport const platform = getPlatform();\n\nexport const CTextarea = ({ style, maxrows, index }) => {\n  const [placeholder, setPlaceHolder] = useState(\"\");\n  const [rowIndex, setRowIndex] = useState({ height: 0, index: 0 });\n  const [beforeInput, setBeforeInput] = useState(\"\");\n  const [commandWindow, setCommandWindow] = useRecoilState(commandWindowState);\n  const [commandInputList, setCommandInputList] = useRecoilState(commandInputListState);\n  const [commandInputColor] = useRecoilState(commandInputColorState); //setCommandInputColor\n\n  const ref = useRef();\n  const rootRef = useRef();\n\n  useEffect(() => {\n    console.log(rootRef);\n   },[])\n\n  const onChangeInput = useCallback(\n    (e) => {\n      //#region #누르면 명령어창 보여줌 || 안드로이드 설정(한번에 여러개들어옴)\n      if (\n        e.nativeEvent.data == \"#\" ||\n        (platform === \"android\" && !!e.nativeEvent.data && e.nativeEvent.data.includes(\"#\"))\n      ) {\n        let { left, top, height } = offset(ref.current);\n        //#region 가로이동 제한 & height 화면 안 넘어가게 제한\n        // 가로제한\n        if (left + 260 > SCREEN_WIDTH && left < 260) {\n          left = commandWindow.left;\n        } else if (SCREEN_WIDTH - left < 260 && left > 260) left -= 280;\n        // 세로제한\n        let heightCommand = 448;\n        top -= heightCommand;\n        if (top < 0) {\n          heightCommand += top - height;\n          top = 0;\n        }\n        //#endregion\n        setCommandWindow({ visible: true, top: top, left: left, index: index, height: heightCommand });\n      } else {\n        setCommandWindow({ ...commandWindow, visible: false, index: -1 });\n      }\n      //#region 내용업데이트\n      setCommandInputList([\n        ...commandInputList.slice(0, index),\n        { ...commandInputList[index], content: e.target.value },\n        ...commandInputList.slice(index + 1, 999),\n      ]);\n      //#endregion\n      setBeforeInput(e.target.value);\n      //#endregion #누르면 명령어창 보여줌\n\n      //#region 줄 수 제한 높이체크\n      if (!!maxrows) {\n        if (rowIndex.index < maxrows && rowIndex.height < e.target.scrollHeight)\n          setRowIndex({ index: rowIndex.index + 1, height: e.target.scrollHeight });\n        else if (rowIndex.height < e.target.scrollHeight) e.target.value = e.target.value.slice(0, -1);\n        e.target.style.maxHeight = rowIndex.height - 4 + \"px\";\n        e.target.style.height = rowIndex.height - 4 + \"px\";\n      }\n      //#endregion 줄 수 제한 높이체크\n    },\n    [rowIndex, beforeInput, commandWindow, index]\n  );\n  const onBlur = () => {\n    setPlaceHolder(\"\");\n  };\n  const onFocus = () => {\n    if (commandWindow.index != index) {\n      if (commandWindow.visible) setCommandWindow({ ...commandWindow, visible: false, index: index });\n      else setCommandWindow({ ...commandWindow, index: index });\n    }\n    setPlaceHolder('명령어 사용시 \"#\"을 입력하세요.');\n  };\n  return (\n    <>\n      {/* <TextareaAutosize\n        ref={ref}\n        // rows={rows ?? 1}\n        onFocus={onFocus}\n        onChange={onChangeInput}\n        placeholder={placeholder}\n        maxRows={maxrows}\n        onBlur={onBlur}\n        value={commandInputList[index].content}\n        style={\n          style\n            ? style\n            : {\n                width: SCREEN_WIDTH - 60,\n                height: \"20px\",\n                border: \"none\",\n                fontSize: 15,\n                color: GRAY7,\n                resize: \"none\",\n                fontFamily: \"AppleSDGothic\",\n                overflow: \"hidden\",\n                outline: \"none\",\n              }\n        }\n      ></TextareaAutosize> */}\n      <div contentEditable suppressHydrationWarning style={{width:SCREEN_WIDTH - 60, outline:'none'}}>\n        {/* <span style={{ color: \"black\" }} >asd</span>\n        <span style={{ color: \"red\" }}>asd</span> */}\n        {commandInputList[index].content}\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}