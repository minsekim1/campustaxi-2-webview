{"ast":null,"code":"import { NAVER_API_KEY, NAVER_API_SECRET_KEY } from \"..\";\nexport const getPath = (x1, y1, x2, y2) => {\n  //&option={탐색옵션}\n  return new Promise((resolve, reject) => {\n    fetch(`/map-direction/v1/driving?start=${x1},${y1}&goal=${x2},${y2}`, {\n      method: \"GET\",\n      headers: {\n        \"X-NCP-APIGW-API-KEY-ID\": NAVER_API_KEY,\n        \"X-NCP-APIGW-API-KEY\": NAVER_API_SECRET_KEY\n      }\n    }).then(d => d.json()).then(d => resolve({\n      path: d.route.traoptimal[0].path,\n      distance: Number(Number(d.route.traoptimal[0].summary.distance / 1000).toFixed(1)),\n      duration: Number(Number(d.route.traoptimal[0].summary.duration / 60000).toFixed(0)),\n      departureTime: d.route.traoptimal[0].summary.departureTime,\n      taxiFare: d.route.traoptimal[0].summary.taxiFare\n    })).catch(e => reject(e));\n  });\n};","map":{"version":3,"sources":["/Users/macbook/_myProject/campustaxi-2-webview/src/components/common/function/getPath.js"],"names":["NAVER_API_KEY","NAVER_API_SECRET_KEY","getPath","x1","y1","x2","y2","Promise","resolve","reject","fetch","method","headers","then","d","json","path","route","traoptimal","distance","Number","summary","toFixed","duration","departureTime","taxiFare","catch","e"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,oBAAxB,QAAoD,IAApD;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,KAAoB;AACzC;AACA,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,IAAAA,KAAK,CAAE,mCAAkCP,EAAG,IAAGC,EAAG,SAAQC,EAAG,IAAGC,EAAG,EAA9D,EAAiE;AACpEK,MAAAA,MAAM,EAAE,KAD4D;AAEpEC,MAAAA,OAAO,EAAE;AACP,kCAA0BZ,aADnB;AAEP,+BAAuBC;AAFhB;AAF2D,KAAjE,CAAL,CAOGY,IAPH,CAOSC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAPf,EAQGF,IARH,CAQSC,CAAD,IACJN,OAAO,CAAC;AACNQ,MAAAA,IAAI,EAAEF,CAAC,CAACG,KAAF,CAAQC,UAAR,CAAmB,CAAnB,EAAsBF,IADtB;AAENG,MAAAA,QAAQ,EAAEC,MAAM,CAACA,MAAM,CAACN,CAAC,CAACG,KAAF,CAAQC,UAAR,CAAmB,CAAnB,EAAsBG,OAAtB,CAA8BF,QAA9B,GAAyC,IAA1C,CAAN,CAAsDG,OAAtD,CAA8D,CAA9D,CAAD,CAFV;AAGNC,MAAAA,QAAQ,EAAEH,MAAM,CAACA,MAAM,CAACN,CAAC,CAACG,KAAF,CAAQC,UAAR,CAAmB,CAAnB,EAAsBG,OAAtB,CAA8BE,QAA9B,GAAyC,KAA1C,CAAN,CAAuDD,OAAvD,CAA+D,CAA/D,CAAD,CAHV;AAINE,MAAAA,aAAa,EAAEV,CAAC,CAACG,KAAF,CAAQC,UAAR,CAAmB,CAAnB,EAAsBG,OAAtB,CAA8BG,aAJvC;AAKNC,MAAAA,QAAQ,EAAEX,CAAC,CAACG,KAAF,CAAQC,UAAR,CAAmB,CAAnB,EAAsBG,OAAtB,CAA8BI;AALlC,KAAD,CATX,EAiBGC,KAjBH,CAiBUC,CAAD,IAAOlB,MAAM,CAACkB,CAAD,CAjBtB;AAkBD,GAnBM,CAAP;AAoBD,CAtBM","sourcesContent":["import { NAVER_API_KEY, NAVER_API_SECRET_KEY } from \"..\";\n\nexport const getPath = (x1, y1, x2, y2) => {\n  //&option={탐색옵션}\n  return new Promise((resolve, reject) => {\n    fetch(`/map-direction/v1/driving?start=${x1},${y1}&goal=${x2},${y2}`, {\n      method: \"GET\",\n      headers: {\n        \"X-NCP-APIGW-API-KEY-ID\": NAVER_API_KEY,\n        \"X-NCP-APIGW-API-KEY\": NAVER_API_SECRET_KEY,\n      },\n    })\n      .then((d) => d.json())\n      .then((d) =>\n        resolve({\n          path: d.route.traoptimal[0].path,\n          distance: Number(Number(d.route.traoptimal[0].summary.distance / 1000).toFixed(1)),\n          duration: Number(Number(d.route.traoptimal[0].summary.duration / 60000).toFixed(0)),\n          departureTime: d.route.traoptimal[0].summary.departureTime,\n          taxiFare: d.route.traoptimal[0].summary.taxiFare,\n        })\n      )\n      .catch((e) => reject(e));\n  });\n};\n"]},"metadata":{},"sourceType":"module"}