{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/_myProject/campustaxi-2-webview/src/components/modal/CropScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useRecoilState } from \"recoil\";\nimport { CropState } from \"./../recoil\";\nimport { useState, useCallback } from \"react\";\nimport { GRAY6, ORANGE, SCREEN_HEIGHT, SCREEN_WIDTH } from \"./../../style/index\";\nimport Cropper from \"react-easy-crop\";\nimport { getCroppedImg } from \"../common/function/getCroppedImg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CropScreen = () => {\n  _s();\n\n  const [crop, setCrop] = useRecoilState(CropState);\n  const [cropXY, setCropXY] = useState({\n    x: 0,\n    y: 0\n  });\n  const [rotation] = useState(0); //setRotation\n\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState();\n  const [, setCroppedImage] = useState(); //croppedImage\n\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n  const showCroppedImage = useCallback(async () => {\n    try {\n      const croppedImage = await getCroppedImg(crop.previewURL, croppedAreaPixels, rotation);\n      setCroppedImage(croppedImage);\n      setCrop({\n        visible: false,\n        file: croppedImage,\n        previewURL: croppedImage\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [croppedAreaPixels, rotation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: crop.visible ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 0,\n        width: SCREEN_WIDTH,\n        height: SCREEN_HEIGHT,\n        zIndex: 4,\n        backgroundColor: \"white\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: onCropComplete,\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          padding: \"12px 0px\",\n          color: ORANGE,\n          position: \"relative\",\n          zIndex: 20,\n          backgroundColor: \"white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingLeft: 16,\n            color: GRAY6\n          },\n          onClick: () => setCrop({ ...crop,\n            visible: false\n          }),\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingRight: 16\n          },\n          onClick: showCroppedImage,\n          children: \"\\uC644\\uB8CC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Cropper, {\n        image: crop.previewURL,\n        crop: cropXY,\n        zoom: zoom,\n        aspect: 415 / 200,\n        onCropChange: setCropXY,\n        onCropComplete: onCropComplete,\n        onZoomChange: setZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CropScreen, \"VN8gv0OzoB38YilwuBgh9iiM8p0=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = CropScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CropScreen\");","map":{"version":3,"sources":["/Users/macbook/_myProject/campustaxi-2-webview/src/components/modal/CropScreen.js"],"names":["useRecoilState","CropState","useState","useCallback","GRAY6","ORANGE","SCREEN_HEIGHT","SCREEN_WIDTH","Cropper","getCroppedImg","CropScreen","crop","setCrop","cropXY","setCropXY","x","y","rotation","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","setCroppedImage","onCropComplete","croppedArea","showCroppedImage","croppedImage","previewURL","visible","file","e","console","error","position","top","width","height","zIndex","backgroundColor","display","justifyContent","padding","color","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import { useRecoilState } from \"recoil\";\nimport { CropState } from \"./../recoil\";\nimport { useState, useCallback } from \"react\";\nimport { GRAY6, ORANGE, SCREEN_HEIGHT, SCREEN_WIDTH } from \"./../../style/index\";\nimport Cropper from \"react-easy-crop\";\nimport { getCroppedImg } from \"../common/function/getCroppedImg\";\n\nexport const CropScreen = () => {\n  const [crop, setCrop] = useRecoilState(CropState);\n\n  const [cropXY, setCropXY] = useState({ x: 0, y: 0 });\n  const [rotation] = useState(0); //setRotation\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState();\n  const [, setCroppedImage] = useState(); //croppedImage\n\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n\n  const showCroppedImage = useCallback(async () => {\n    try {\n      const croppedImage = await getCroppedImg(crop.previewURL, croppedAreaPixels, rotation);\n      setCroppedImage(croppedImage);\n      setCrop({ visible: false, file: croppedImage, previewURL: croppedImage });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [croppedAreaPixels, rotation]);\n\n  return (\n    <div>\n      {/* 바탕사진 수정 창 */}\n      {crop.visible ? (\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            width: SCREEN_WIDTH,\n            height: SCREEN_HEIGHT,\n            zIndex: 4,\n            backgroundColor: \"white\",\n          }}\n        >\n          <div\n            onClick={onCropComplete}\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              padding: \"12px 0px\",\n              color: ORANGE,\n              position: \"relative\",\n              zIndex: 20,\n              backgroundColor: \"white\",\n            }}\n          >\n            <div style={{ paddingLeft: 16, color: GRAY6 }} onClick={() => setCrop({ ...crop, visible: false })}>\n              취소\n            </div>\n            <div style={{ paddingRight: 16 }} onClick={showCroppedImage}>\n              완료\n            </div>\n          </div>\n          <Cropper\n            image={crop.previewURL}\n            crop={cropXY}\n            zoom={zoom}\n            aspect={415 / 200}\n            onCropChange={setCropXY}\n            onCropComplete={onCropComplete}\n            onZoomChange={setZoom}\n          />\n        </div>\n      ) : (\n        false\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}