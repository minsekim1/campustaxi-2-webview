{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/_myProject/campustaxi-2-webview/src/components/NMap.js\",\n    _s = $RefreshSig$();\n\nimport { RenderAfterNavermapsLoaded, NaverMap, Marker, // Circle,\n// GroundOverlay,\n// Ellipse,\nPolyline } from \"react-naver-maps\";\nimport { HEADER_HEIGHT, SCREEN_HEIGHT } from \"./../style\";\nimport { SCREEN_WIDTH } from \"./../style/index\";\nimport { useRecoilState } from \"recoil\";\nimport { BottomModalState, ChatRoomListState, ChatRoomSeletedState, CreateBottomModalState, endPosState, MyPosState, pathState, SearchPositionState, SearchPosResultState, startPosState } from \"./recoil\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { NAVER_API_KEY, posInit } from \"./common\";\nimport { getfetch } from \"./common/index\";\nimport { getPath } from \"./common/function/getPath\";\nimport { PathInfo } from \"./PathInfo\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NMAP = () => {\n  return /*#__PURE__*/_jsxDEV(RenderAfterNavermapsLoaded, {\n    ncpClientId: NAVER_API_KEY // 자신의 네이버 계정에서 발급받은 Client ID\n    ,\n    error: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Maps Load Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this),\n    loading: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Maps Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(NaverMapAPI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = NMAP;\n\nfunction NaverMapAPI() {\n  _s();\n\n  //#region 방생성 state\n  const [visibleSearch, setVisibleSearch] = useRecoilState(SearchPositionState);\n  const [searchResult, setSearchResult] = useRecoilState(SearchPosResultState);\n  const [visibleCreate, setVisibleCreate] = useRecoilState(CreateBottomModalState);\n  const [visible, setVisible] = useRecoilState(BottomModalState);\n  const [myPos, setMyPos] = useRecoilState(MyPosState);\n  const [startPos, setStartPos] = useRecoilState(startPosState);\n  const [endPos, setEndPos] = useRecoilState(endPosState);\n  const [path, setPath] = useRecoilState(pathState); //# 기본 데이터\n\n  const navermaps = window.naver.maps;\n  const [bounds, setBounds] = useState(new navermaps.LatLngBounds(new navermaps.LatLng(37.5391768, 126.9980514), new navermaps.LatLng(37.5591768, 126.9780514)));\n  const [chatRoomList, setChatRoomList] = useRecoilState(ChatRoomListState);\n  const naverMapRef = useRef(); //# 방검색 데이터\n\n  const [chatRoomSeleted, setChatRoomSeleted] = useRecoilState(ChatRoomSeletedState); //# useEffect\n\n  useEffect(() => {\n    getfetch(\"/chat-rooms\").then(d => setChatRoomList(d.map(room => {\n      return { ...room,\n        path: _.chunk(_.split(room.path, \",\"), 2)\n      };\n    })));\n  }, []);\n  useEffect(() => {\n    if (endPos.place_name && startPos.place_name) {\n      let x1 = Number(startPos.x);\n      let y1 = Number(startPos.y);\n      let x2 = Number(endPos.x);\n      let y2 = Number(endPos.y);\n      setBounds(new navermaps.LatLngBounds(new navermaps.LatLng(y1 - 0.04, x1), new navermaps.LatLng(y2 + 0.02, x2)));\n      getPath(x1, y1, x2, y2).then(d => {\n        if (typeof d.distance === \"number\" && d.distance > 0) setPath(d);\n      });\n    } else if (startPos.place_name.length > 0 || endPos.place_name.length > 0) {\n      const Pos = startPos.place_name.length > 0 ? startPos : endPos;\n      setBounds(new navermaps.LatLngBounds(new navermaps.LatLng(Number(Pos.y) - 0.02, Number(Pos.x)), new navermaps.LatLng(Number(Pos.y) + 0.02, Number(Pos.x))));\n    }\n  }, [startPos.place_name, endPos.place_name]);\n  useEffect(() => {\n    if (chatRoomSeleted.id !== -1 && naverMapRef.current) {\n      let x1 = Number(chatRoomSeleted.start_route[0].x);\n      let y1 = Number(chatRoomSeleted.start_route[0].y);\n      let x2 = Number(chatRoomSeleted.end_route[0].x);\n      let y2 = Number(chatRoomSeleted.end_route[0].y);\n      setBounds(new navermaps.LatLngBounds(new navermaps.LatLng(y1 - 0.08, x1), new navermaps.LatLng(y2 + 0.02, x2)));\n    }\n  }, [chatRoomSeleted]); //# 함수\n\n  const onClickMarker = pos => {\n    if (visibleSearch.position === \"start\") setStartPos(pos);else setEndPos(pos);\n    setSearchResult({\n      documents: [posInit],\n      meta: {\n        is_end: true,\n        pageable_count: -1,\n        total_count: -1\n      }\n    });\n    setVisibleCreate(true);\n    setVisibleSearch({\n      visible: false,\n      position: \"\"\n    });\n  }; //#endregion\n\n\n  return /*#__PURE__*/_jsxDEV(NaverMap, {\n    ref: naverMapRef,\n    mapDivId: \"maps-getting-started-uncontrolled\" // default: react-naver-map\n    ,\n    style: {\n      width: SCREEN_WIDTH,\n      // 네이버지도 가로 길이\n      height: SCREEN_HEIGHT - HEADER_HEIGHT // 네이버지도 세로 길이\n\n    },\n    defaultCenter: myPos // 지도 초기 위치\n    // onDrag={onDrag} // TEST CODE\n    ,\n    bounds: bounds,\n    onBoundsChanged: setBounds,\n    children: [chatRoomList.length > 0 && chatRoomList.map((room, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ImageMarker, {\n        color: \"#FF6F6F\",\n        onClick: () => {\n          setChatRoomSeleted(room);\n          setVisible(true);\n        },\n        position: new navermaps.LatLng(Number(room.start_route[0].y), Number(room.start_route[0].x)),\n        navermaps: navermaps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImageMarker, {\n        onClick: () => {\n          setChatRoomSeleted(room);\n          setVisible(true);\n        },\n        position: new navermaps.LatLng(Number(room.end_route[0].y), Number(room.end_route[0].x)),\n        navermaps: navermaps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this)]\n    }, i.toString(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }, this)), chatRoomList.length > 0 && chatRoomList // .map((room) => room.end_route[0])\n    .map((room, i) => /*#__PURE__*/_jsxDEV(Polyline, {\n      path: [new navermaps.LatLng(Number(room.start_route[0].y), Number(room.start_route[0].x)), new navermaps.LatLng(Number(room.end_route[0].y), Number(room.end_route[0].x))],\n      strokeColor: \"#FF6E6E\",\n      strokeOpacity: 0.2,\n      strokeWeight: 3\n    }, i.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)), visibleSearch.visible && searchResult.documents.map((pos, i) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: new navermaps.LatLng(Number(pos.y), Number(pos.x)),\n      animation: 1,\n      onClick: () => onClickMarker(pos)\n    }, i.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }, this)), (visibleCreate || visibleSearch.position === \"end\") && startPos.place_name ? /*#__PURE__*/_jsxDEV(ImageMarker, {\n      url: \"/images/startPosIcon.png\",\n      position: new navermaps.LatLng(Number(startPos.y), Number(startPos.x)),\n      navermaps: navermaps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this) : false, (visibleCreate || visibleSearch.position === \"start\") && endPos.place_name ? /*#__PURE__*/_jsxDEV(ImageMarker, {\n      url: \"/images/endPosIcon.png\",\n      position: new navermaps.LatLng(Number(endPos.y), Number(endPos.x)),\n      navermaps: navermaps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this) : false, startPos.place_name.length > 0 && endPos.place_name.length > 0 && path.distance > 0 && visibleCreate || chatRoomSeleted.path.length > 0 && visible ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PathInfo, {\n        data: path.distance > 0 && visibleCreate ? path : chatRoomSeleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n        path: path.distance > 0 && visibleCreate ? path.path.map(line => new navermaps.LatLng(Number(line[1]), Number(line[0]))) : chatRoomSeleted.path.map(line => new navermaps.LatLng(Number(line[1]), Number(line[0]))),\n        strokeColor: \"red\",\n        strokeOpacity: 1,\n        strokeWeight: 5,\n        strokeStyle: \"solid\",\n        strokeLineCap: \"round\",\n        strokeLineJoin: \"round\",\n        startIcon: 3,\n        startIconSize: 20,\n        endIcon: 1,\n        endIconSize: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : false]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NaverMapAPI, \"xus3TMlPBi22/3U4/UJIrr6zfzA=\", false, function () {\n  return [useRecoilState, useRecoilState, useRecoilState, useRecoilState, useRecoilState, useRecoilState, useRecoilState, useRecoilState, useRecoilState, useRecoilState];\n});\n\n_c2 = NaverMapAPI;\n\nfunction ImageMarker(props) {\n  var _props$color, _props$url;\n\n  const navermaps = props.navermaps;\n  const icon = {\n    content: `<div onClick=\\\"${props.onClick}\\\"><img alt=\\\" \\\" style=\\\"${!props.url ? \"border-radius:30px;border-style:solid;\" : \"\"}border-color:${(_props$color = props.color) !== null && _props$color !== void 0 ? _props$color : \"#535353\"};border-width:3px\\\" width=37 height=${props.url ? 48 : 37} src=${(_props$url = props.url) !== null && _props$url !== void 0 ? _props$url : \"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\"} /></div>`,\n    size: new navermaps.Size(20, 20),\n    anchor: new navermaps.Point(20, 20)\n  };\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    title: \"Green\",\n    icon: icon,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 10\n  }, this);\n}\n\n_c3 = ImageMarker;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"NMAP\");\n$RefreshReg$(_c2, \"NaverMapAPI\");\n$RefreshReg$(_c3, \"ImageMarker\");","map":{"version":3,"sources":["/Users/macbook/_myProject/campustaxi-2-webview/src/components/NMap.js"],"names":["RenderAfterNavermapsLoaded","NaverMap","Marker","Polyline","HEADER_HEIGHT","SCREEN_HEIGHT","SCREEN_WIDTH","useRecoilState","BottomModalState","ChatRoomListState","ChatRoomSeletedState","CreateBottomModalState","endPosState","MyPosState","pathState","SearchPositionState","SearchPosResultState","startPosState","useEffect","useRef","useState","NAVER_API_KEY","posInit","getfetch","getPath","PathInfo","_","NMAP","NaverMapAPI","visibleSearch","setVisibleSearch","searchResult","setSearchResult","visibleCreate","setVisibleCreate","visible","setVisible","myPos","setMyPos","startPos","setStartPos","endPos","setEndPos","path","setPath","navermaps","window","naver","maps","bounds","setBounds","LatLngBounds","LatLng","chatRoomList","setChatRoomList","naverMapRef","chatRoomSeleted","setChatRoomSeleted","then","d","map","room","chunk","split","place_name","x1","Number","x","y1","y","x2","y2","distance","length","Pos","id","current","start_route","end_route","onClickMarker","pos","position","documents","meta","is_end","pageable_count","total_count","width","height","i","toString","line","ImageMarker","props","icon","content","onClick","url","color","size","Size","anchor","Point"],"mappings":"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","sourcesContent":["import {\n  RenderAfterNavermapsLoaded,\n  NaverMap,\n  Marker,\n  // Circle,\n  // GroundOverlay,\n  // Ellipse,\n  Polyline,\n} from \"react-naver-maps\";\n\nimport { HEADER_HEIGHT, SCREEN_HEIGHT } from \"./../style\";\nimport { SCREEN_WIDTH } from \"./../style/index\";\nimport { useRecoilState } from \"recoil\";\nimport {\n  BottomModalState,\n  ChatRoomListState,\n  ChatRoomSeletedState,\n  CreateBottomModalState,\n  endPosState,\n  MyPosState,\n  pathState,\n  SearchPositionState,\n  SearchPosResultState,\n  startPosState,\n} from \"./recoil\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { NAVER_API_KEY, posInit } from \"./common\";\nimport { getfetch } from \"./common/index\";\nimport { getPath } from \"./common/function/getPath\";\nimport { PathInfo } from \"./PathInfo\";\nimport _ from \"lodash\";\n\nexport const NMAP = () => {\n  return (\n    <RenderAfterNavermapsLoaded\n      ncpClientId={NAVER_API_KEY} // 자신의 네이버 계정에서 발급받은 Client ID\n      error={<p>Maps Load Error</p>}\n      loading={<p>Maps Loading...</p>}\n    >\n      <NaverMapAPI />\n    </RenderAfterNavermapsLoaded>\n  );\n};\nfunction NaverMapAPI() {\n  //#region 방생성 state\n  const [visibleSearch, setVisibleSearch] = useRecoilState(SearchPositionState);\n  const [searchResult, setSearchResult] = useRecoilState(SearchPosResultState);\n  const [visibleCreate, setVisibleCreate] = useRecoilState(CreateBottomModalState);\n  const [visible, setVisible] = useRecoilState(BottomModalState);\n\n  const [myPos, setMyPos] = useRecoilState(MyPosState);\n  const [startPos, setStartPos] = useRecoilState(startPosState);\n  const [endPos, setEndPos] = useRecoilState(endPosState);\n  const [path, setPath] = useRecoilState(pathState);\n\n  //# 기본 데이터\n  const navermaps = window.naver.maps;\n  const [bounds, setBounds] = useState(\n    new navermaps.LatLngBounds(\n      new navermaps.LatLng(37.5391768, 126.9980514),\n      new navermaps.LatLng(37.5591768, 126.9780514)\n    )\n  );\n  const [chatRoomList, setChatRoomList] = useRecoilState(ChatRoomListState);\n  const naverMapRef = useRef();\n\n  //# 방검색 데이터\n  const [chatRoomSeleted, setChatRoomSeleted] = useRecoilState(ChatRoomSeletedState);\n\n  //# useEffect\n  useEffect(() => {\n    getfetch(\"/chat-rooms\").then((d) =>\n      setChatRoomList(\n        d.map((room) => {\n          return { ...room, path: _.chunk(_.split(room.path, \",\"), 2) };\n        })\n      )\n    );\n  }, []);\n\n  useEffect(() => {\n    if (endPos.place_name && startPos.place_name) {\n      let x1 = Number(startPos.x);\n      let y1 = Number(startPos.y);\n      let x2 = Number(endPos.x);\n      let y2 = Number(endPos.y);\n      setBounds(new navermaps.LatLngBounds(new navermaps.LatLng(y1 - 0.04, x1), new navermaps.LatLng(y2 + 0.02, x2)));\n      getPath(x1, y1, x2, y2).then((d) => {\n        if (typeof d.distance === \"number\" && d.distance > 0) setPath(d);\n      });\n    } else if (startPos.place_name.length > 0 || endPos.place_name.length > 0) {\n      const Pos = startPos.place_name.length > 0 ? startPos : endPos;\n      setBounds(\n        new navermaps.LatLngBounds(\n          new navermaps.LatLng(Number(Pos.y) - 0.02, Number(Pos.x)),\n          new navermaps.LatLng(Number(Pos.y) + 0.02, Number(Pos.x))\n        )\n      );\n    }\n  }, [startPos.place_name, endPos.place_name]);\n\n  useEffect(() => {\n    if (chatRoomSeleted.id !== -1 && naverMapRef.current) {\n      let x1 = Number(chatRoomSeleted.start_route[0].x);\n      let y1 = Number(chatRoomSeleted.start_route[0].y);\n      let x2 = Number(chatRoomSeleted.end_route[0].x);\n      let y2 = Number(chatRoomSeleted.end_route[0].y);\n      setBounds(new navermaps.LatLngBounds(new navermaps.LatLng(y1 - 0.08, x1), new navermaps.LatLng(y2 + 0.02, x2)));\n    }\n  }, [chatRoomSeleted]);\n\n  //# 함수\n  const onClickMarker = (pos) => {\n    if (visibleSearch.position === \"start\") setStartPos(pos);\n    else setEndPos(pos);\n    setSearchResult({ documents: [posInit], meta: { is_end: true, pageable_count: -1, total_count: -1 } });\n    setVisibleCreate(true);\n    setVisibleSearch({ visible: false, position: \"\" });\n  };\n  //#endregion\n  return (\n    <NaverMap\n      ref={naverMapRef}\n      mapDivId={\"maps-getting-started-uncontrolled\"} // default: react-naver-map\n      style={{\n        width: SCREEN_WIDTH, // 네이버지도 가로 길이\n        height: SCREEN_HEIGHT - HEADER_HEIGHT, // 네이버지도 세로 길이\n      }}\n      defaultCenter={myPos} // 지도 초기 위치\n      // onDrag={onDrag} // TEST CODE\n      bounds={bounds}\n      onBoundsChanged={setBounds}\n    >\n      {chatRoomList.length > 0 &&\n        chatRoomList.map((room, i) => (\n          <div key={i.toString()}>\n            {/* DB 모든 출발지 */}\n            <ImageMarker\n              color={\"#FF6F6F\"}\n              onClick={() => {\n                setChatRoomSeleted(room);\n                setVisible(true);\n              }}\n              position={new navermaps.LatLng(Number(room.start_route[0].y), Number(room.start_route[0].x))}\n              navermaps={navermaps}\n            />\n            {/* DB 모든 도착지 */}\n            <ImageMarker\n              onClick={() => {\n                setChatRoomSeleted(room);\n                setVisible(true);\n              }}\n              position={new navermaps.LatLng(Number(room.end_route[0].y), Number(room.end_route[0].x))}\n              navermaps={navermaps}\n            />\n          </div>\n        ))}\n      {/* 출->도 직선경로 */}\n      {chatRoomList.length > 0 &&\n        chatRoomList\n          // .map((room) => room.end_route[0])\n          .map((room, i) => (\n            <Polyline\n              key={i.toString()}\n              path={[\n                new navermaps.LatLng(Number(room.start_route[0].y), Number(room.start_route[0].x)),\n                new navermaps.LatLng(Number(room.end_route[0].y), Number(room.end_route[0].x)),\n              ]}\n              strokeColor={\"#FF6E6E\"}\n              strokeOpacity={0.2}\n              strokeWeight={3}\n            />\n          ))}\n      {/* 검색결과 */}\n      {visibleSearch.visible &&\n        searchResult.documents.map((pos, i) => (\n          <Marker\n            key={i.toString()}\n            position={new navermaps.LatLng(Number(pos.y), Number(pos.x))}\n            animation={1}\n            onClick={() => onClickMarker(pos)}\n          />\n        ))}\n      {/* 방 생성 시 출/도 표시 */}\n      {(visibleCreate || visibleSearch.position === \"end\") && startPos.place_name ? (\n        <ImageMarker\n          url={\"/images/startPosIcon.png\"}\n          position={new navermaps.LatLng(Number(startPos.y), Number(startPos.x))}\n          navermaps={navermaps}\n        />\n      ) : (\n        false\n      )}\n      {(visibleCreate || visibleSearch.position === \"start\") && endPos.place_name ? (\n        <ImageMarker\n          url={\"/images/endPosIcon.png\"}\n          position={new navermaps.LatLng(Number(endPos.y), Number(endPos.x))}\n          navermaps={navermaps}\n        />\n      ) : (\n        false\n      )}\n      {/* 출->도 실제 택시경로 */}\n      {(startPos.place_name.length > 0 && endPos.place_name.length > 0 && path.distance > 0 && visibleCreate) ||\n      (chatRoomSeleted.path.length > 0 && visible) ? (\n        <>\n          <PathInfo data={path.distance > 0 && visibleCreate ? path : chatRoomSeleted} />\n          <Polyline\n            path={\n              path.distance > 0 && visibleCreate\n                ? path.path.map((line) => new navermaps.LatLng(Number(line[1]), Number(line[0])))\n                : chatRoomSeleted.path.map((line) => new navermaps.LatLng(Number(line[1]), Number(line[0])))\n            }\n            strokeColor={\"red\"}\n            strokeOpacity={1}\n            strokeWeight={5}\n            strokeStyle={\"solid\"}\n            strokeLineCap={\"round\"}\n            strokeLineJoin={\"round\"}\n            startIcon={3}\n            startIconSize={20}\n            endIcon={1}\n            endIconSize={20}\n          />\n        </>\n      ) : (\n        false\n      )}\n    </NaverMap>\n  );\n}\n\nfunction ImageMarker(props) {\n  const navermaps = props.navermaps;\n  const icon = {\n    content: `<div onClick=\\\"${props.onClick}\\\"><img alt=\\\" \\\" style=\\\"${\n      !props.url ? \"border-radius:30px;border-style:solid;\" : \"\"\n    }border-color:${props.color ?? \"#535353\"};border-width:3px\\\" width=37 height=${props.url ? 48 : 37} src=${\n      props.url ?? \"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\"\n    } /></div>`,\n    size: new navermaps.Size(20, 20),\n    anchor: new navermaps.Point(20, 20),\n  };\n\n  return <Marker title=\"Green\" icon={icon} {...props} />;\n}\n"]},"metadata":{},"sourceType":"module"}