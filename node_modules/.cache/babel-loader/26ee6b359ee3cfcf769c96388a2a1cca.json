{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CTag.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { commandInputListState } from \"../../recoil\";\nimport { WithContext as ReactTags } from \"react-tag-input\";\nimport \"../../../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst KeyCodes = {\n  comma: 188,\n  space: 32,\n  enter: [10, 13]\n};\nconst delimiters = [...KeyCodes.enter, KeyCodes.comma, KeyCodes.space]; // tagList:[], inputValue:\"\"\n\nexport const CTag = ({\n  index,\n  type = \"h1\"\n}) => {\n  _s();\n\n  const [commandInputList, setCommandInputList] = useRecoilState(commandInputListState);\n  const tagList = commandInputList[index].content.tagList;\n  const inputValue = commandInputList[index].content.inputValue;\n  const [suggestionList] = useState([//setSuggestionList\n  {\n    id: \"캠퍼스택시\",\n    text: \"캠퍼스택시\"\n  }, {\n    id: \"Campustaxi\",\n    text: \"Campustaxi\"\n  }]); //#region 태그기본함수\n  // 태그삭제\n\n  const handleDelete = i => {\n    setCommandInputList([...commandInputList.slice(0, index), { ...commandInputList[index],\n      content: {\n        inputValue: inputValue,\n        tagList: tagList.filter((tag, index) => index !== i)\n      }\n    }, ...commandInputList.slice(index + 1, 999)]);\n  }; // 태그추가\n\n\n  const handleAddition = tag => {\n    setCommandInputList([...commandInputList.slice(0, index), { ...commandInputList[index],\n      content: {\n        inputValue: \"\",\n        tagList: [...tagList, tag]\n      }\n    }, ...commandInputList.slice(index + 1, 999)]);\n  }; // 인풋수정\n\n\n  const handleInputChange = e => {\n    setCommandInputList([...commandInputList.slice(0, index), { ...commandInputList[index],\n      content: {\n        inputValue: e,\n        tagList: tagList\n      }\n    }, ...commandInputList.slice(index + 1, 999)]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ReactTags, {\n      placeholder: \"엔터, 스페이스, 쉼표로 태그를 구분해주세요.\",\n      maxLength: 30,\n      allowDeleteFromEmptyInput: false,\n      inline: true,\n      tags: tagList,\n      inputValue: inputValue,\n      suggestions: suggestionList,\n      handleDelete: handleDelete,\n      handleAddition: handleAddition,\n      handleInputChange: handleInputChange,\n      delimiters: delimiters,\n      renderSuggestion: ({\n        text\n      }, query) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 13\n        },\n        children: [text, \" (\", query, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CTag, \"NNVMf1HMyk8WT4DMicSy+o9Vtbc=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = CTag;\n\nvar _c;\n\n$RefreshReg$(_c, \"CTag\");","map":{"version":3,"sources":["/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CTag.js"],"names":["useState","useRecoilState","commandInputListState","WithContext","ReactTags","KeyCodes","comma","space","enter","delimiters","CTag","index","type","commandInputList","setCommandInputList","tagList","content","inputValue","suggestionList","id","text","handleDelete","i","slice","filter","tag","handleAddition","handleInputChange","e","query","fontSize"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { commandInputListState } from \"../../recoil\";\nimport { WithContext as ReactTags } from \"react-tag-input\";\n\nimport \"../../../App.css\";\n\nconst KeyCodes = {\n  comma: 188,\n  space: 32,\n  enter: [10, 13],\n};\n\nconst delimiters = [...KeyCodes.enter, KeyCodes.comma, KeyCodes.space];\n\n// tagList:[], inputValue:\"\"\nexport const CTag = ({ index, type = \"h1\" }) => {\n  const [commandInputList, setCommandInputList] = useRecoilState(commandInputListState);\n  const tagList = commandInputList[index].content.tagList;\n  const inputValue = commandInputList[index].content.inputValue;\n  const [suggestionList] = useState([\n    //setSuggestionList\n    { id: \"캠퍼스택시\", text: \"캠퍼스택시\" },\n    { id: \"Campustaxi\", text: \"Campustaxi\" },\n  ]);\n\n  //#region 태그기본함수\n  // 태그삭제\n  const handleDelete = (i) => {\n    setCommandInputList([\n      ...commandInputList.slice(0, index),\n      {\n        ...commandInputList[index],\n        content: { inputValue: inputValue, tagList: tagList.filter((tag, index) => index !== i) },\n      },\n      ...commandInputList.slice(index + 1, 999),\n    ]);\n  };\n  // 태그추가\n  const handleAddition = (tag) => {\n    setCommandInputList([\n      ...commandInputList.slice(0, index),\n      { ...commandInputList[index], content: { inputValue: \"\", tagList: [...tagList, tag] } },\n      ...commandInputList.slice(index + 1, 999),\n    ]);\n  };\n  // 인풋수정\n  const handleInputChange = (e) => {\n    setCommandInputList([\n      ...commandInputList.slice(0, index),\n      { ...commandInputList[index], content: { inputValue: e, tagList: tagList } },\n      ...commandInputList.slice(index + 1, 999),\n    ]);\n  };\n\n  return (\n    <>\n      <ReactTags\n        placeholder={\"엔터, 스페이스, 쉼표로 태그를 구분해주세요.\"}\n        maxLength={30}\n        allowDeleteFromEmptyInput={false}\n        inline\n        tags={tagList}\n        inputValue={inputValue}\n        suggestions={suggestionList}\n        handleDelete={handleDelete}\n        handleAddition={handleAddition}\n        handleInputChange={handleInputChange}\n        delimiters={delimiters}\n        renderSuggestion={({ text }, query) => (\n          <div style={{ fontSize: 13 }}>\n            {text} ({query})\n          </div>\n        )}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}