{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/InputImage.js\",\n    _s = $RefreshSig$();\n\nimport { SCREEN_WIDTH } from \"../../style\";\nimport { useState, useEffect } from \"react\";\nimport { CropInit, CropState, FilePathInit, FilePathState } from \"../recoil\";\nimport { useRecoilState } from \"recoil\";\nimport { Icon } from \"../common/Icon\";\nimport { loadXHR } from './CommandInput/CImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputImage = ({\n  placeholder\n}) => {\n  _s();\n\n  const [crop, setCrop] = useRecoilState(CropState);\n  const [filepath, setFilepath] = useRecoilState(FilePathState);\n  const [isCrop, setIsCrop] = useState(false); //#region 앱껏다 키고 캐쉬 초기화 시 이미지 아닌게 들어깄으면 삭제\n\n  useEffect(() => {\n    loadXHR(filepath.file).then(f => {\n      try {\n        if (typeof f.type === \"string\") console.debug(f.type.includes(\"image\"), f);\n      } catch (e) {}\n    }).catch(() => setFilepath(FilePathInit));\n  }, []); //#endregion\n  //#region 편집 후 가져오기\n\n  useEffect(() => {\n    if (!crop.visible && isCrop) {\n      setFilepath({\n        file: crop.file,\n        previewURL: crop.previewURL,\n        type: \"CourseCreateMainImg\"\n      });\n      setIsCrop(false);\n      setCrop(CropInit);\n    }\n  }, [crop.visible]); //#endregion\n\n  const onChangeInput = e => {\n    try {\n      e.preventDefault();\n      let reader = new FileReader();\n      let file = e.target.files[0];\n\n      reader.onloadend = () => {\n        setIsCrop(true);\n        setCrop({\n          visible: true,\n          file: file,\n          previewURL: reader.result\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } catch (e) {\n      setIsCrop(false);\n      setCrop(CropInit);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: SCREEN_WIDTH,\n          backgroundImage: filepath.previewURL != \"\" ? `linear-gradient(to bottom,rgba(0,0,0,0),rgba(255,255,255, 1)),url(${filepath.previewURL})` : `linear-gradient(to bottom,rgba(200,200,200,1),rgba(200,200,200, 1),rgba(200,200,200, 1),rgba(255,255,255, 0.2))`,\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n          height: SCREEN_WIDTH * 200 / 415\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          top: -110\n        },\n        children: filepath.previewURL != \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: inputFileCSSNone,\n            onClick: () => {\n              setCrop({\n                visible: true,\n                file: filepath.file,\n                previewURL: filepath.previewURL\n              });\n              setIsCrop(true);\n            },\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"faEdit\",\n              size: \"lg\",\n              color: \"rgba(73,80,87,0.5)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: { ...inputFileCSSNone,\n              marginLeft: 5\n            },\n            onClick: () => setFilepath(FilePathInit),\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"faTrash\",\n              size: \"lg\",\n              color: \"rgba(73,80,87,0.5)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n          style: inputFileCSS,\n          htmlFor: \"input-file\",\n          children: placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: \"\",\n        type: \"file\",\n        id: \"input-file\",\n        style: {\n          display: \"none\"\n        },\n        accept: \"image/*\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputImage, \"4tMxUXnF+AAHvAmHBfB+XGqGF7Q=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c = InputImage;\nconst inputFileCSSNone = {\n  padding: \"6px 12px\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  display: \"flex\",\n  backgroundColor: \"rgba(255,255,255,0.8)\",\n  borderRadius: \"20px\",\n  color: \"white\",\n  cursor: \"pointer\"\n};\nconst inputFileCSS = {\n  fontSize: 13,\n  padding: \"6px 25px\",\n  backgroundColor: \"#FF6600\",\n  borderRadius: \"4px\",\n  color: \"white\",\n  cursor: \"pointer\"\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"InputImage\");","map":{"version":3,"sources":["/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/InputImage.js"],"names":["SCREEN_WIDTH","useState","useEffect","CropInit","CropState","FilePathInit","FilePathState","useRecoilState","Icon","loadXHR","InputImage","placeholder","crop","setCrop","filepath","setFilepath","isCrop","setIsCrop","file","then","f","type","console","debug","includes","e","catch","visible","previewURL","onChangeInput","preventDefault","reader","FileReader","target","files","onloadend","result","readAsDataURL","display","flexDirection","justifyContent","alignItems","width","backgroundImage","backgroundSize","backgroundRepeat","height","position","top","inputFileCSSNone","marginLeft","inputFileCSS","padding","backgroundColor","borderRadius","color","cursor","fontSize"],"mappings":"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","sourcesContent":["import { SCREEN_WIDTH } from \"../../style\";\nimport { useState, useEffect } from \"react\";\nimport { CropInit, CropState, FilePathInit, FilePathState } from \"../recoil\";\nimport { useRecoilState } from \"recoil\";\nimport { Icon } from \"../common/Icon\";\nimport { loadXHR } from './CommandInput/CImage';\n\nexport const InputImage = ({ placeholder }) => {\n  const [crop, setCrop] = useRecoilState(CropState);\n  const [filepath, setFilepath] = useRecoilState(FilePathState);\n  const [isCrop, setIsCrop] = useState(false);\n\n  //#region 앱껏다 키고 캐쉬 초기화 시 이미지 아닌게 들어깄으면 삭제\n  useEffect(() => {\n    loadXHR(filepath.file)\n      .then((f) => {\n        try {\n          if (typeof f.type === \"string\") console.debug(f.type.includes(\"image\"), f);\n        } catch (e) {}\n      })\n      .catch(() => setFilepath(FilePathInit));\n  }, []);\n  //#endregion\n\n  //#region 편집 후 가져오기\n  useEffect(() => {\n    if (!crop.visible && isCrop) {\n      setFilepath({ file: crop.file, previewURL: crop.previewURL, type: \"CourseCreateMainImg\" });\n      setIsCrop(false);\n      setCrop(CropInit);\n    }\n  }, [crop.visible]);\n  //#endregion\n  const onChangeInput = (e) => {\n    try {\n      e.preventDefault();\n      let reader = new FileReader();\n      let file = e.target.files[0];\n      reader.onloadend = () => {\n        setIsCrop(true);\n        setCrop({ visible: true, file: file, previewURL: reader.result });\n      };\n      reader.readAsDataURL(file);\n    } catch (e) {\n      setIsCrop(false);\n      setCrop(CropInit);\n    }\n  };\n  return (\n    <div>\n      <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\n        {/* 바탕사진 및 바탕 임시 회색 */}\n        <div\n          style={{\n            width: SCREEN_WIDTH,\n            backgroundImage:\n              filepath.previewURL != \"\"\n                ? `linear-gradient(to bottom,rgba(0,0,0,0),rgba(255,255,255, 1)),url(${filepath.previewURL})`\n                : `linear-gradient(to bottom,rgba(200,200,200,1),rgba(200,200,200, 1),rgba(200,200,200, 1),rgba(255,255,255, 0.2))`,\n            backgroundSize: \"cover\",\n            backgroundRepeat: \"no-repeat\",\n            height: (SCREEN_WIDTH * 200) / 415,\n          }}\n        />\n        {/* 바탕사진 선택버튼 */}\n        <div style={{ position: \"relative\", top: -110 }}>\n          {filepath.previewURL != \"\" ? (\n            <div style={{ display: \"flex\" }}>\n              <div\n                style={inputFileCSSNone}\n                onClick={() => {\n                  setCrop({ visible: true, file: filepath.file, previewURL: filepath.previewURL });\n                  setIsCrop(true);\n                }}\n              >\n                <Icon name={\"faEdit\"} size={\"lg\"} color={\"rgba(73,80,87,0.5)\"} />\n              </div>\n              <div style={{ ...inputFileCSSNone, marginLeft: 5 }} onClick={() => setFilepath(FilePathInit)}>\n                <Icon name={\"faTrash\"} size={\"lg\"} color={\"rgba(73,80,87,0.5)\"} />\n              </div>\n            </div>\n          ) : (\n            <label style={inputFileCSS} htmlFor=\"input-file\">\n              {placeholder}\n            </label>\n          )}\n        </div>\n        <input\n          value={\"\"}\n          type=\"file\"\n          id=\"input-file\"\n          style={{ display: \"none\" }}\n          accept=\"image/*\"\n          onChange={onChangeInput}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst inputFileCSSNone = {\n  padding: \"6px 12px\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  display: \"flex\",\n  backgroundColor: \"rgba(255,255,255,0.8)\",\n  borderRadius: \"20px\",\n  color: \"white\",\n  cursor: \"pointer\",\n};\nconst inputFileCSS = {\n  fontSize: 13,\n  padding: \"6px 25px\",\n  backgroundColor: \"#FF6600\",\n  borderRadius: \"4px\",\n  color: \"white\",\n  cursor: \"pointer\",\n};\n"]},"metadata":{},"sourceType":"module"}