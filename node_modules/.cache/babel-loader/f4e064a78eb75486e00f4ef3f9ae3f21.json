{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nrequire('./environment.js');\n\nvar utils = require('./utils.js');\n\nrequire('./types.js');\n\nrequire('./actionTypes.js');\n\nvar Actor = require('./Actor.js');\n\nfunction spawnBehavior(behavior, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var state = behavior.initialState;\n  var observers = new Set();\n  var mailbox = [];\n  var flushing = false;\n\n  var flush = function () {\n    if (flushing) {\n      return;\n    }\n\n    flushing = true;\n\n    while (mailbox.length > 0) {\n      var event_1 = mailbox.shift();\n      state = behavior.transition(state, event_1, actorCtx);\n      observers.forEach(function (observer) {\n        return observer.next(state);\n      });\n    }\n\n    flushing = false;\n  };\n\n  var actor = Actor.toActorRef({\n    id: options.id,\n    send: function (event) {\n      mailbox.push(event);\n      flush();\n    },\n    getSnapshot: function () {\n      return state;\n    },\n    subscribe: function (next, handleError, complete) {\n      var observer = utils.toObserver(next, handleError, complete);\n      observers.add(observer);\n      observer.next(state);\n      return {\n        unsubscribe: function () {\n          observers.delete(observer);\n        }\n      };\n    }\n  });\n  var actorCtx = {\n    parent: options.parent,\n    self: actor,\n    id: options.id || 'anonymous',\n    observers: observers\n  };\n  state = behavior.start ? behavior.start(actorCtx) : state;\n  return actor;\n}\n\nexports.spawnBehavior = spawnBehavior;","map":{"version":3,"sources":["/Users/macbook/_myProject/campustaxi-2-webview/node_modules/xstate/lib/behaviors.js"],"names":["Object","defineProperty","exports","value","require","utils","Actor","spawnBehavior","behavior","options","state","initialState","observers","Set","mailbox","flushing","flush","length","event_1","shift","transition","actorCtx","forEach","observer","next","actor","toActorRef","id","send","event","push","getSnapshot","subscribe","handleError","complete","toObserver","add","unsubscribe","delete","parent","self","start"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEAC,OAAO,CAAC,kBAAD,CAAP;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAAnB;;AACAA,OAAO,CAAC,YAAD,CAAP;;AACAA,OAAO,CAAC,kBAAD,CAAP;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,YAAD,CAAnB;;AAEA,SAASG,aAAT,CAAuBC,QAAvB,EAAiCC,OAAjC,EAA0C;AACxC,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAED,MAAIC,KAAK,GAAGF,QAAQ,CAACG,YAArB;AACA,MAAIC,SAAS,GAAG,IAAIC,GAAJ,EAAhB;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,QAAQ,GAAG,KAAf;;AAEA,MAAIC,KAAK,GAAG,YAAY;AACtB,QAAID,QAAJ,EAAc;AACZ;AACD;;AAEDA,IAAAA,QAAQ,GAAG,IAAX;;AAEA,WAAOD,OAAO,CAACG,MAAR,GAAiB,CAAxB,EAA2B;AACzB,UAAIC,OAAO,GAAGJ,OAAO,CAACK,KAAR,EAAd;AACAT,MAAAA,KAAK,GAAGF,QAAQ,CAACY,UAAT,CAAoBV,KAApB,EAA2BQ,OAA3B,EAAoCG,QAApC,CAAR;AACAT,MAAAA,SAAS,CAACU,OAAV,CAAkB,UAAUC,QAAV,EAAoB;AACpC,eAAOA,QAAQ,CAACC,IAAT,CAAcd,KAAd,CAAP;AACD,OAFD;AAGD;;AAEDK,IAAAA,QAAQ,GAAG,KAAX;AACD,GAhBD;;AAkBA,MAAIU,KAAK,GAAGnB,KAAK,CAACoB,UAAN,CAAiB;AAC3BC,IAAAA,EAAE,EAAElB,OAAO,CAACkB,EADe;AAE3BC,IAAAA,IAAI,EAAE,UAAUC,KAAV,EAAiB;AACrBf,MAAAA,OAAO,CAACgB,IAAR,CAAaD,KAAb;AACAb,MAAAA,KAAK;AACN,KAL0B;AAM3Be,IAAAA,WAAW,EAAE,YAAY;AACvB,aAAOrB,KAAP;AACD,KAR0B;AAS3BsB,IAAAA,SAAS,EAAE,UAAUR,IAAV,EAAgBS,WAAhB,EAA6BC,QAA7B,EAAuC;AAChD,UAAIX,QAAQ,GAAGlB,KAAK,CAAC8B,UAAN,CAAiBX,IAAjB,EAAuBS,WAAvB,EAAoCC,QAApC,CAAf;AACAtB,MAAAA,SAAS,CAACwB,GAAV,CAAcb,QAAd;AACAA,MAAAA,QAAQ,CAACC,IAAT,CAAcd,KAAd;AACA,aAAO;AACL2B,QAAAA,WAAW,EAAE,YAAY;AACvBzB,UAAAA,SAAS,CAAC0B,MAAV,CAAiBf,QAAjB;AACD;AAHI,OAAP;AAKD;AAlB0B,GAAjB,CAAZ;AAoBA,MAAIF,QAAQ,GAAG;AACbkB,IAAAA,MAAM,EAAE9B,OAAO,CAAC8B,MADH;AAEbC,IAAAA,IAAI,EAAEf,KAFO;AAGbE,IAAAA,EAAE,EAAElB,OAAO,CAACkB,EAAR,IAAc,WAHL;AAIbf,IAAAA,SAAS,EAAEA;AAJE,GAAf;AAMAF,EAAAA,KAAK,GAAGF,QAAQ,CAACiC,KAAT,GAAiBjC,QAAQ,CAACiC,KAAT,CAAepB,QAAf,CAAjB,GAA4CX,KAApD;AACA,SAAOe,KAAP;AACD;;AAEDvB,OAAO,CAACK,aAAR,GAAwBA,aAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nrequire('./environment.js');\nvar utils = require('./utils.js');\nrequire('./types.js');\nrequire('./actionTypes.js');\nvar Actor = require('./Actor.js');\n\nfunction spawnBehavior(behavior, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var state = behavior.initialState;\n  var observers = new Set();\n  var mailbox = [];\n  var flushing = false;\n\n  var flush = function () {\n    if (flushing) {\n      return;\n    }\n\n    flushing = true;\n\n    while (mailbox.length > 0) {\n      var event_1 = mailbox.shift();\n      state = behavior.transition(state, event_1, actorCtx);\n      observers.forEach(function (observer) {\n        return observer.next(state);\n      });\n    }\n\n    flushing = false;\n  };\n\n  var actor = Actor.toActorRef({\n    id: options.id,\n    send: function (event) {\n      mailbox.push(event);\n      flush();\n    },\n    getSnapshot: function () {\n      return state;\n    },\n    subscribe: function (next, handleError, complete) {\n      var observer = utils.toObserver(next, handleError, complete);\n      observers.add(observer);\n      observer.next(state);\n      return {\n        unsubscribe: function () {\n          observers.delete(observer);\n        }\n      };\n    }\n  });\n  var actorCtx = {\n    parent: options.parent,\n    self: actor,\n    id: options.id || 'anonymous',\n    observers: observers\n  };\n  state = behavior.start ? behavior.start(actorCtx) : state;\n  return actor;\n}\n\nexports.spawnBehavior = spawnBehavior;\n"]},"metadata":{},"sourceType":"script"}