[{"/Users/macbook/_myProject/campustaxi-2-webview/src/index.js":"1","/Users/macbook/_myProject/campustaxi-2-webview/src/App.js":"2","/Users/macbook/_myProject/campustaxi-2-webview/src/reportWebVitals.js":"3","/Users/macbook/_myProject/campustaxi-2-webview/src/screen/SearchScreen.js":"4","/Users/macbook/_myProject/campustaxi-2-webview/src/screen/ShopScreen.js":"5","/Users/macbook/_myProject/campustaxi-2-webview/src/screen/MyChatScreen.js":"6","/Users/macbook/_myProject/campustaxi-2-webview/src/screen/MyScreen.js":"7","/Users/macbook/_myProject/campustaxi-2-webview/src/screen/HomeScreen.js":"8","/Users/macbook/_myProject/campustaxi-2-webview/src/screen/CourseDetailScreen.js":"9","/Users/macbook/_myProject/campustaxi-2-webview/src/screen/CourseScreen.js":"10","/Users/macbook/_myProject/campustaxi-2-webview/src/components/recoil.js":"11","/Users/macbook/_myProject/campustaxi-2-webview/src/components/BottomTabBar.js":"12","/Users/macbook/_myProject/campustaxi-2-webview/src/components/BottomHeader.js":"13","/Users/macbook/_myProject/campustaxi-2-webview/src/components/SearchPosition.js":"14","/Users/macbook/_myProject/campustaxi-2-webview/src/components/BottomModal.js":"15","/Users/macbook/_myProject/campustaxi-2-webview/src/components/SelectMapModal.js":"16","/Users/macbook/_myProject/campustaxi-2-webview/src/components/CourseArea.js":"17","/Users/macbook/_myProject/campustaxi-2-webview/src/components/NMap.js":"18","/Users/macbook/_myProject/campustaxi-2-webview/src/components/BackHeader.js":"19","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CourseImage.js":"20","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/SearchBar.js":"21","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Btn/BookmarkBtn.js":"22","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Btn/CreateBtnCourse.js":"23","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Btn/CreateBtn.js":"24","/Users/macbook/_myProject/campustaxi-2-webview/src/components/modal/CourseCreateModal.js":"25","/Users/macbook/_myProject/campustaxi-2-webview/src/components/card/ProfileCard.js":"26","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Dialog/AlertDialog.js":"27","/Users/macbook/_myProject/campustaxi-2-webview/src/components/modal/CropScreen.js":"28","/Users/macbook/_myProject/campustaxi-2-webview/src/components/modal/CourseProductModal.js":"29","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/dndFunc.js":"30","/Users/macbook/_myProject/campustaxi-2-webview/src/components/common/function/localStorageEffect.js":"31","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/index.js":"32","/Users/macbook/_myProject/campustaxi-2-webview/src/components/common/index.js":"33","/Users/macbook/_myProject/campustaxi-2-webview/src/style/index.js":"34","/Users/macbook/_myProject/campustaxi-2-webview/src/components/card/PositionCard.js":"35","/Users/macbook/_myProject/campustaxi-2-webview/src/components/list/CouseList.js":"36","/Users/macbook/_myProject/campustaxi-2-webview/src/components/common/function/getCroppedImg.js":"37","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Icon/ProfileIcon.js":"38","/Users/macbook/_myProject/campustaxi-2-webview/src/components/common/Icon.js":"39","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandArea.js":"40","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/InputImage.js":"41","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CImage.js":"42","/Users/macbook/_myProject/campustaxi-2-webview/src/components/PathInfo.js":"43","/Users/macbook/_myProject/campustaxi-2-webview/src/components/common/function/getPath.js":"44","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Icon/Rowdot.js":"45","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CItem.js":"46","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CommandListRenderItem.js":"47","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CProduct.js":"48","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CContour.js":"49","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CTag.js":"50","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CH.js":"51","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CTextarea.js":"52","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CPlace.js":"53","/Users/macbook/_myProject/campustaxi-2-webview/src/components/card/CourseCard.js":"54","/Users/macbook/_myProject/campustaxi-2-webview/src/components/card/RoomCard.js":"55","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/switch.js":"56","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/radio.js":"57","/Users/macbook/_myProject/campustaxi-2-webview/src/components/common/function/getPlatform.js":"58","/Users/macbook/_myProject/campustaxi-2-webview/src/components/FadeDiv/index.js":"59","/Users/macbook/_myProject/campustaxi-2-webview/src/components/common/Tag.js":"60","/Users/macbook/_myProject/campustaxi-2-webview/src/components/common/prettyDate.js":"61"},{"size":439,"mtime":1635491773967,"results":"62","hashOfConfig":"63"},{"size":1921,"mtime":1635491773959,"results":"64","hashOfConfig":"63"},{"size":362,"mtime":1635491773967,"results":"65","hashOfConfig":"63"},{"size":176,"mtime":1635491773967,"results":"66","hashOfConfig":"63"},{"size":680,"mtime":1635491773968,"results":"67","hashOfConfig":"63"},{"size":260,"mtime":1635491773967,"results":"68","hashOfConfig":"63"},{"size":105,"mtime":1635491773967,"results":"69","hashOfConfig":"63"},{"size":719,"mtime":1635491773967,"results":"70","hashOfConfig":"63"},{"size":1624,"mtime":1635491773967,"results":"71","hashOfConfig":"63"},{"size":899,"mtime":1635491773967,"results":"72","hashOfConfig":"63"},{"size":6357,"mtime":1635491773966,"results":"73","hashOfConfig":"63"},{"size":3613,"mtime":1635491773959,"results":"74","hashOfConfig":"63"},{"size":2756,"mtime":1635491773959,"results":"75","hashOfConfig":"63"},{"size":1095,"mtime":1635491773964,"results":"76","hashOfConfig":"63"},{"size":10903,"mtime":1635491773959,"results":"77","hashOfConfig":"63"},{"size":3462,"mtime":1635491773964,"results":"78","hashOfConfig":"63"},{"size":1019,"mtime":1635491773960,"results":"79","hashOfConfig":"63"},{"size":8583,"mtime":1635491773964,"results":"80","hashOfConfig":"63"},{"size":408,"mtime":1635491773959,"results":"81","hashOfConfig":"63"},{"size":2327,"mtime":1635491773963,"results":"82","hashOfConfig":"63"},{"size":497,"mtime":1635491773963,"results":"83","hashOfConfig":"63"},{"size":686,"mtime":1635491773960,"results":"84","hashOfConfig":"63"},{"size":1114,"mtime":1635491773960,"results":"85","hashOfConfig":"63"},{"size":907,"mtime":1635491773960,"results":"86","hashOfConfig":"63"},{"size":6988,"mtime":1635491773966,"results":"87","hashOfConfig":"63"},{"size":2250,"mtime":1635491773964,"results":"88","hashOfConfig":"63"},{"size":1478,"mtime":1635491773960,"results":"89","hashOfConfig":"63"},{"size":2445,"mtime":1635491773966,"results":"90","hashOfConfig":"63"},{"size":4901,"mtime":1635491773966,"results":"91","hashOfConfig":"63"},{"size":1467,"mtime":1635502989791,"results":"92","hashOfConfig":"63"},{"size":297,"mtime":1635491773965,"results":"93","hashOfConfig":"63"},{"size":4122,"mtime":1635491773963,"results":"94","hashOfConfig":"63"},{"size":3000,"mtime":1635491773965,"results":"95","hashOfConfig":"63"},{"size":1179,"mtime":1635500171587,"results":"96","hashOfConfig":"63"},{"size":1973,"mtime":1635491773964,"results":"97","hashOfConfig":"63"},{"size":3084,"mtime":1635500638156,"results":"98","hashOfConfig":"63"},{"size":2298,"mtime":1635491773965,"results":"99","hashOfConfig":"63"},{"size":1602,"mtime":1635491773961,"results":"100","hashOfConfig":"63"},{"size":723,"mtime":1635491773965,"results":"101","hashOfConfig":"63"},{"size":9222,"mtime":1635491773961,"results":"102","hashOfConfig":"63"},{"size":3828,"mtime":1635491773963,"results":"103","hashOfConfig":"63"},{"size":5306,"mtime":1635491773961,"results":"104","hashOfConfig":"63"},{"size":1886,"mtime":1635491773964,"results":"105","hashOfConfig":"63"},{"size":896,"mtime":1635491773965,"results":"106","hashOfConfig":"63"},{"size":305,"mtime":1635491773961,"results":"107","hashOfConfig":"63"},{"size":985,"mtime":1635491773962,"results":"108","hashOfConfig":"63"},{"size":4736,"mtime":1635502968103,"results":"109","hashOfConfig":"63"},{"size":582,"mtime":1635491773962,"results":"110","hashOfConfig":"63"},{"size":234,"mtime":1635491773961,"results":"111","hashOfConfig":"63"},{"size":2357,"mtime":1635491773962,"results":"112","hashOfConfig":"63"},{"size":3265,"mtime":1635491773961,"results":"113","hashOfConfig":"63"},{"size":4440,"mtime":1635502473168,"results":"114","hashOfConfig":"63"},{"size":476,"mtime":1635491773962,"results":"115","hashOfConfig":"63"},{"size":4044,"mtime":1635500454347,"results":"116","hashOfConfig":"63"},{"size":2984,"mtime":1635491773964,"results":"117","hashOfConfig":"63"},{"size":706,"mtime":1635491773963,"results":"118","hashOfConfig":"63"},{"size":886,"mtime":1635491773963,"results":"119","hashOfConfig":"63"},{"size":318,"mtime":1635491773965,"results":"120","hashOfConfig":"63"},{"size":1101,"mtime":1635491773960,"results":"121","hashOfConfig":"63"},{"size":585,"mtime":1635491773965,"results":"122","hashOfConfig":"63"},{"size":1862,"mtime":1635491773965,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"18iyjw0",{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"126"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"126"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"126"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"126"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"126"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"126"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"126"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"126"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"126"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"126"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"126"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"126"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"126"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"126"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"126"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"126"},"/Users/macbook/_myProject/campustaxi-2-webview/src/index.js",[],["263","264"],"/Users/macbook/_myProject/campustaxi-2-webview/src/App.js",["265","266","267"],"import { RecoilRoot, useRecoilState } from \"recoil\";\nimport HomeScreen from \"./screen/HomeScreen\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\n\nimport SearchScreen from \"./screen/SearchScreen\";\nimport CourseDetailScreen from \"./screen/CourseDetailScreen\";\nimport CourseScreen from \"./screen/CourseScreen\";\nimport ShopScreen from \"./screen/ShopScreen\";\nimport MyChatScreen from \"./screen/MyChatScreen\";\nimport MyScreen from \"./screen/MyScreen\";\nimport { resetServerContext } from \"react-beautiful-dnd\";\nimport { Button } from \"@mui/material/Button\";\nimport { CircularProgress, Collapse, LinearProgress } from \"@mui/material\";\nimport { loadingState } from \"./components/recoil\";\n\nresetServerContext();\n\nconst App = () => {\n  return (\n    <RecoilRoot>\n      <BrowserRouter>\n        <LoadingPage />\n        <Switch>\n          {/* minsekim\n           * 모든 .push 화면이동은 postMessage 로 Native 앱에 푸쉬를 보내야함. 아니면 화면 뒤로가기하면 사라짐.\n           */}\n          <Route exact path=\"/\">\n            <HomeScreen />\n          </Route>\n          <Route exact path=\"/course/detail\">\n            <CourseDetailScreen />\n          </Route>\n          <Route exact path=\"/course\">\n            <CourseScreen />\n          </Route>\n          <Route path=\"/search\">\n            <SearchScreen />\n          </Route>\n          {/* jeong */}\n          <Route path=\"/shop\">\n            <ShopScreen />\n          </Route>\n          {/* seo */}\n          <Route exact path=\"/chat/my\">\n            <MyChatScreen />\n          </Route>\n          <Route exact path=\"/my\">\n            <MyScreen />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </RecoilRoot>\n  );\n};\n\nconst LoadingPage = () => {\n  const [loading] = useRecoilState(loadingState);\n  return <div>{loading ? <LinearProgress variant={\"indeterminate\"} color={\"info\"} /> : false}</div>;\n};\nexport default App;\n","/Users/macbook/_myProject/campustaxi-2-webview/src/reportWebVitals.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/screen/SearchScreen.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/screen/ShopScreen.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/screen/MyChatScreen.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/screen/MyScreen.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/screen/HomeScreen.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/screen/CourseDetailScreen.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/screen/CourseScreen.js",["268"],"import { BottomHeader } from \"../components/BottomHeader\";\nimport { BottomTabBar } from \"../components/BottomTabBar\";\nimport { SearchBar } from \"../components/Input/SearchBar\";\nimport { CourseArea } from \"../components/CourseArea\";\nimport { CreateBtnCourse } from \"../components/Btn/CreateBtnCourse\";\nimport { CourseCreateModal } from \"./../components/modal/CourseCreateModal\";\nimport { CropScreen } from \"./../components/modal/CropScreen\";\nimport { CourseProductModal } from \"../components/modal/CourseProductModal\";\nimport { AlertDialog } from \"./../components/Dialog/AlertDialog\";\n\nconst CourseScreen = () => {\n  return (\n    <>\n      <BottomHeader />\n      {/* <SearchBar /> */}\n      <CourseArea />\n      <CreateBtnCourse />\n      <CourseProductModal />\n      <CourseCreateModal />\n      <CropScreen />\n      <BottomTabBar />\n      <AlertDialog />\n    </>\n  );\n};\n\nexport default CourseScreen;\n","/Users/macbook/_myProject/campustaxi-2-webview/src/components/recoil.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/BottomTabBar.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/BottomHeader.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/SearchPosition.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/BottomModal.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/SelectMapModal.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/CourseArea.js",["269","270"],"import { VirtualizeSwipeableViews, slideRenderer } from \"./list/CouseList\";\nimport { useEffect, useRef, useState } from \"react\";\n\nconst favorite = {\n  enterCount: { 이벤트: 3, 데이트: 2, 여행: 1, 힐링: 10, 문화: 20, 놀이: 10 },\n  index: { 이벤트: 1, 데이트: 0, 여행: 1, 힐링: 1, 문화: 1, 놀이: 0 },\n};\nexport const CourseArea = () => {\n  const [rankedCourseList, setRankedCourseList] = useState([]);\n  //#region 많이 본 순서로 정렬, 이벤트는 무조건 처음.\n  // 많이 클릭한 순서 => ['문화', '힐링', '놀이', '이벤트', '데이트', '여행']\n  useEffect(() => {\n    let list = Object.keys(favorite.enterCount)\n      .sort((a, b) => favorite.enterCount[b] - favorite.enterCount[a])\n      .filter((t) => t !== \"이벤트\");\n    list.unshift(\"이벤트\");\n    setRankedCourseList(list);\n  }, [favorite.enterCount]);\n  //#endregion\n\n  return (\n    <div>\n      <VirtualizeSwipeableViews slideRenderer={(p) => slideRenderer(p, rankedCourseList)} />\n    </div>\n  );\n};\n","/Users/macbook/_myProject/campustaxi-2-webview/src/components/NMap.js",["271","272","273","274","275","276","277","278","279","280"],"import {\n  RenderAfterNavermapsLoaded,\n  NaverMap,\n  Marker,\n  // Circle,\n  // GroundOverlay,\n  // Ellipse,\n  Polyline,\n} from \"react-naver-maps\";\n\nimport { HEADER_HEIGHT, SCREEN_HEIGHT } from \"./../style\";\nimport { SCREEN_WIDTH } from \"./../style/index\";\nimport { useRecoilState } from \"recoil\";\nimport {\n  BottomModalState,\n  ChatRoomListState,\n  ChatRoomSeletedState,\n  CreateBottomModalState,\n  endPosState,\n  MyPosState,\n  pathState,\n  SearchPositionState,\n  SearchPosResultState,\n  startPosState,\n} from \"./recoil\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { NAVER_API_KEY, posInit } from \"./common\";\nimport { getfetch } from \"./common/index\";\nimport { getPath } from \"./common/function/getPath\";\nimport { PathInfo } from \"./PathInfo\";\nimport _ from \"lodash\";\n\nexport const NMAP = () => {\n  return (\n    <RenderAfterNavermapsLoaded\n      ncpClientId={NAVER_API_KEY} // 자신의 네이버 계정에서 발급받은 Client ID\n      error={<p>Maps Load Error</p>}\n      loading={<p>Maps Loading...</p>}\n    >\n      <NaverMapAPI />\n    </RenderAfterNavermapsLoaded>\n  );\n};\nfunction NaverMapAPI() {\n  //#region 방생성 state\n  const [visibleSearch, setVisibleSearch] = useRecoilState(SearchPositionState);\n  const [searchResult, setSearchResult] = useRecoilState(SearchPosResultState);\n  const [visibleCreate, setVisibleCreate] = useRecoilState(CreateBottomModalState);\n  const [visible, setVisible] = useRecoilState(BottomModalState);\n\n  const [myPos, setMyPos] = useRecoilState(MyPosState);\n  const [startPos, setStartPos] = useRecoilState(startPosState);\n  const [endPos, setEndPos] = useRecoilState(endPosState);\n  const [path, setPath] = useRecoilState(pathState);\n\n  //# 기본 데이터\n  const navermaps = window.naver.maps;\n  const [bounds, setBounds] = useState(\n    new navermaps.LatLngBounds(\n      new navermaps.LatLng(37.5391768, 126.9980514),\n      new navermaps.LatLng(37.5591768, 126.9780514)\n    )\n  );\n  const [chatRoomList, setChatRoomList] = useRecoilState(ChatRoomListState);\n  const naverMapRef = useRef();\n\n  //# 방검색 데이터\n  const [chatRoomSeleted, setChatRoomSeleted] = useRecoilState(ChatRoomSeletedState);\n\n  //# useEffect\n  useEffect(() => {\n    getfetch(\"/chat-rooms\").then((d) =>\n      setChatRoomList(\n        d.map((room) => {\n          return { ...room, path: _.chunk(_.split(room.path, \",\"), 2) };\n        })\n      )\n    );\n  }, []);\n\n  useEffect(() => {\n    if (endPos.place_name && startPos.place_name) {\n      let x1 = Number(startPos.x);\n      let y1 = Number(startPos.y);\n      let x2 = Number(endPos.x);\n      let y2 = Number(endPos.y);\n      setBounds(new navermaps.LatLngBounds(new navermaps.LatLng(y1 - 0.04, x1), new navermaps.LatLng(y2 + 0.02, x2)));\n      getPath(x1, y1, x2, y2).then((d) => {\n        if (typeof d.distance === \"number\" && d.distance > 0) setPath(d);\n      });\n    } else if (startPos.place_name.length > 0 || endPos.place_name.length > 0) {\n      const Pos = startPos.place_name.length > 0 ? startPos : endPos;\n      setBounds(\n        new navermaps.LatLngBounds(\n          new navermaps.LatLng(Number(Pos.y) - 0.02, Number(Pos.x)),\n          new navermaps.LatLng(Number(Pos.y) + 0.02, Number(Pos.x))\n        )\n      );\n    }\n  }, [startPos.place_name, endPos.place_name]);\n\n  useEffect(() => {\n    if (chatRoomSeleted.id !== -1 && naverMapRef.current) {\n      let x1 = Number(chatRoomSeleted.start_route[0].x);\n      let y1 = Number(chatRoomSeleted.start_route[0].y);\n      let x2 = Number(chatRoomSeleted.end_route[0].x);\n      let y2 = Number(chatRoomSeleted.end_route[0].y);\n      setBounds(new navermaps.LatLngBounds(new navermaps.LatLng(y1 - 0.08, x1), new navermaps.LatLng(y2 + 0.02, x2)));\n    }\n  }, [chatRoomSeleted]);\n\n  //# 함수\n  const onClickMarker = (pos) => {\n    if (visibleSearch.position === \"start\") setStartPos(pos);\n    else setEndPos(pos);\n    setSearchResult({ documents: [posInit], meta: { is_end: true, pageable_count: -1, total_count: -1 } });\n    setVisibleCreate(true);\n    setVisibleSearch({ visible: false, position: \"\" });\n  };\n  //#endregion\n  return (\n    <NaverMap\n      ref={naverMapRef}\n      mapDivId={\"maps-getting-started-uncontrolled\"} // default: react-naver-map\n      style={{\n        width: SCREEN_WIDTH, // 네이버지도 가로 길이\n        height: SCREEN_HEIGHT - HEADER_HEIGHT, // 네이버지도 세로 길이\n      }}\n      defaultCenter={myPos} // 지도 초기 위치\n      // onDrag={onDrag} // TEST CODE\n      bounds={bounds}\n      onBoundsChanged={setBounds}\n    >\n      {chatRoomList.length > 0 &&\n        chatRoomList.map((room, i) => (\n          <div key={i.toString()}>\n            {/* DB 모든 출발지 */}\n            <ImageMarker\n              color={\"#FF6F6F\"}\n              onClick={() => {\n                setChatRoomSeleted(room);\n                setVisible(true);\n              }}\n              position={new navermaps.LatLng(Number(room.start_route[0].y), Number(room.start_route[0].x))}\n              navermaps={navermaps}\n            />\n            {/* DB 모든 도착지 */}\n            <ImageMarker\n              onClick={() => {\n                setChatRoomSeleted(room);\n                setVisible(true);\n              }}\n              position={new navermaps.LatLng(Number(room.end_route[0].y), Number(room.end_route[0].x))}\n              navermaps={navermaps}\n            />\n          </div>\n        ))}\n      {/* 출->도 직선경로 */}\n      {chatRoomList.length > 0 &&\n        chatRoomList\n          // .map((room) => room.end_route[0])\n          .map((room, i) => (\n            <Polyline\n              key={i.toString()}\n              path={[\n                new navermaps.LatLng(Number(room.start_route[0].y), Number(room.start_route[0].x)),\n                new navermaps.LatLng(Number(room.end_route[0].y), Number(room.end_route[0].x)),\n              ]}\n              strokeColor={\"#FF6E6E\"}\n              strokeOpacity={0.2}\n              strokeWeight={3}\n            />\n          ))}\n      {/* 검색결과 */}\n      {visibleSearch.visible &&\n        searchResult.documents.map((pos, i) => (\n          <Marker\n            key={i.toString()}\n            position={new navermaps.LatLng(Number(pos.y), Number(pos.x))}\n            animation={1}\n            onClick={() => onClickMarker(pos)}\n          />\n        ))}\n      {/* 방 생성 시 출/도 표시 */}\n      {(visibleCreate || visibleSearch.position === \"end\") && startPos.place_name ? (\n        <ImageMarker\n          url={\"/images/startPosIcon.png\"}\n          position={new navermaps.LatLng(Number(startPos.y), Number(startPos.x))}\n          navermaps={navermaps}\n        />\n      ) : (\n        false\n      )}\n      {(visibleCreate || visibleSearch.position === \"start\") && endPos.place_name ? (\n        <ImageMarker\n          url={\"/images/endPosIcon.png\"}\n          position={new navermaps.LatLng(Number(endPos.y), Number(endPos.x))}\n          navermaps={navermaps}\n        />\n      ) : (\n        false\n      )}\n      {/* 출->도 실제 택시경로 */}\n      {(startPos.place_name.length > 0 && endPos.place_name.length > 0 && path.distance > 0 && visibleCreate) ||\n      (chatRoomSeleted.path.length > 0 && visible) ? (\n        <>\n          <PathInfo data={path.distance > 0 && visibleCreate ? path : chatRoomSeleted} />\n          <Polyline\n            path={\n              path.distance > 0 && visibleCreate\n                ? path.path.map((line) => new navermaps.LatLng(Number(line[1]), Number(line[0])))\n                : chatRoomSeleted.path.map((line) => new navermaps.LatLng(Number(line[1]), Number(line[0])))\n            }\n            strokeColor={\"red\"}\n            strokeOpacity={1}\n            strokeWeight={5}\n            strokeStyle={\"solid\"}\n            strokeLineCap={\"round\"}\n            strokeLineJoin={\"round\"}\n            startIcon={3}\n            startIconSize={20}\n            endIcon={1}\n            endIconSize={20}\n          />\n        </>\n      ) : (\n        false\n      )}\n    </NaverMap>\n  );\n}\n\nfunction ImageMarker(props) {\n  const navermaps = props.navermaps;\n  const icon = {\n    content: `<div onClick=\\\"${props.onClick}\\\"><img alt=\\\" \\\" style=\\\"${\n      !props.url ? \"border-radius:30px;border-style:solid;\" : \"\"\n    }border-color:${props.color ?? \"#535353\"};border-width:3px\\\" width=37 height=${props.url ? 48 : 37} src=${\n      props.url ?? \"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\"\n    } /></div>`,\n    size: new navermaps.Size(20, 20),\n    anchor: new navermaps.Point(20, 20),\n  };\n\n  return <Marker title=\"Green\" icon={icon} {...props} />;\n}\n","/Users/macbook/_myProject/campustaxi-2-webview/src/components/BackHeader.js",["281"],"import { Icon } from \"./common/Icon\";\nimport { GRAY8 } from \"./../style/index\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const BackHeader = ({}) => {\n  const history = useHistory();\n  const goBack = () => history.goBack();\n\n  return (\n    <div onClick={goBack} style={{ position: \"absolute\", padding: 16 }}>\n      <Icon name={\"faChevronLeft\"} color={GRAY8} type={\"light\"} />\n    </div>\n  );\n};\n","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CourseImage.js",["282","283","284","285","286","287","288","289","290"],"import { SCREEN_WIDTH } from \"../../style\";\nimport { useState, useEffect } from \"react\";\nimport { CropInit, CropState, FilePathInit, FilePathState } from \"../recoil\";\nimport { useRecoilState } from \"recoil\";\nimport { Icon } from \"../common/Icon\";\nimport { loadXHR } from \"./CommandInput/CImage\";\n\nexport const CourseImage = ({ placeholder }) => {\n  const [crop, setCrop] = useRecoilState(CropState);\n  const [filepath, setFilepath] = useRecoilState(FilePathState);\n  const [isCrop, setIsCrop] = useState(false);\n\n  return (\n    <div>\n      <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\n        {/* 바탕사진 및 바탕 임시 회색 */}\n        <div\n          style={{\n            width: SCREEN_WIDTH,\n            backgroundImage:\n              filepath.previewURL != \"\"\n                ? `linear-gradient(to bottom,rgba(0,0,0,0),rgba(255,255,255, 1)),url(${filepath.previewURL})`\n                : `linear-gradient(to bottom,rgba(200,200,200,1),rgba(200,200,200, 1),rgba(200,200,200, 1),rgba(255,255,255, 0.2))`,\n            backgroundSize: \"cover\",\n            backgroundRepeat: \"no-repeat\",\n            height: (SCREEN_WIDTH * 200) / 415,\n          }}\n        />\n        {/* 바탕사진 */}\n        <div style={{ position: \"relative\", top: -125 }}>\n          {filepath.previewURL != \"\" ? (\n            <div style={{ display: \"flex\" }}>\n              <div\n                style={inputFileCSSNone}\n              >\n                <Icon name={\"faEdit\"} size={\"lg\"} color={\"rgba(73,80,87,0.5)\"} />\n              </div>\n              <div style={{ ...inputFileCSSNone, marginLeft: 5 }} onClick={() => setFilepath(FilePathInit)}>\n                <Icon name={\"faTrash\"} size={\"lg\"} color={\"rgba(73,80,87,0.5)\"} />\n              </div>\n            </div>\n          ) : (\n            <label style={inputFileCSS} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst inputFileCSSNone = {\n  padding: \"6px 12px\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  display: \"flex\",\n  backgroundColor: \"rgba(255,255,255,0.8)\",\n  borderRadius: \"20px\",\n  color: \"white\",\n  cursor: \"pointer\",\n};\nconst inputFileCSS = {\n  fontSize: 13,\n  padding: \"6px 25px\",\n  backgroundColor: \"transparent\",\n  borderRadius: \"4px\",\n  color: \"white\",\n  cursor: \"pointer\",\n};\n","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/SearchBar.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Btn/BookmarkBtn.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Btn/CreateBtnCourse.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Btn/CreateBtn.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/modal/CourseCreateModal.js",["291","292","293","294","295"],"import { BottomSheet } from \"react-spring-bottom-sheet\";\nimport \"react-spring-bottom-sheet/dist/style.css\";\nimport { GRAY7 } from \"../../style\";\nimport { GRAY6 } from \"../../style/index\";\nimport { useRecoilState } from \"recoil\";\nimport {\n  commandInputListState,\n  commandWindowState,\n  CreateRouteBottomModalState,\n  FilePathInit,\n  loadingState,\n} from \"../recoil\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Textarea } from \"../Input/index\";\nimport { InputImage } from \"../Input/InputImage\";\nimport { BookmarkBtn } from \"../Btn/BookmarkBtn\";\nimport { ProfileCard } from \"../card/ProfileCard\";\nimport { CommandArea } from \"../Input/CommandArea\";\nimport { FilePathState } from \"./../recoil\";\nimport { ORANGE } from \"./../../style/index\";\nimport { postfetch } from \"../common\";\nimport { getItems } from \"./../Input/CommandInput/dndFunc\";\n\nexport const CourseCreateModal = () => {\n  const [, setLoading] = useRecoilState(loadingState); //loading\n  const [visibleRoute, setVisibleRoute] = useRecoilState(CreateRouteBottomModalState);\n  const [commandWindow, setCommandWindow] = useRecoilState(commandWindowState);\n  const [filepath, setFilepath] = useRecoilState(FilePathState);\n  const [commandInputList, setCommandInputList] = useRecoilState(commandInputListState);\n  const [CloseData, setCloseData] = useState({ text: \"닫기\", BtnColor: GRAY6, type: 0 });\n  const bottomRef = useRef();\n  const titleRef = useRef(\"\");\n  const descRef = useRef(\"\");\n\n  // const onClick = (e) => {\n  //   // 명령어창이 아닌 추천코스 생성창 터치 시 명령어창 닫기\n  //   console.debug(\"outer\", e.nativeEvent.target.outerText, e.nativeEvent.target.outerText[0]);\n  //   if (e.nativeEvent.target.outerText[0] != \"#\") setCommandWindow({ ...commandWindow, visible: false, index: -1 });\n  // };\n  const onScrollCapture = (e) => {\n    // 명령어창이 아닌 추천코스 생성창 스크롤 시 명령어창 닫기\n    if (e.nativeEvent.target.outerText[0] !== \"#\") setCommandWindow({ ...commandWindow, visible: false, index: -1 });\n  };\n\n  //#region 닫기 or 생성\n  useEffect(() => {\n    // 배경 사진이 있거나 내용이 있을경우(\"text\" and content) or others 회색 \"생성\" 버튼으로\n    if (\n      (filepath.file !== \"\" && filepath.type === \"CourseCreateMainImg\") ||\n      commandInputList[0].content !== \"\" ||\n      commandInputList[0].type !== \"text\"\n    ) {\n      if (filepath.file === \"\" && filepath.type === \"\") setCloseData({ text: \"생성\", BtnColor: GRAY6, type: 1 });\n      else if (commandInputList[0].content === \"\" && commandInputList[0].type === \"text\")\n        setCloseData({ text: \"생성\", BtnColor: GRAY6, type: 2 });\n      else setCloseData({ text: \"생성\", BtnColor: ORANGE, type: 3 });\n    } else if (CloseData.type !== 0) setCloseData({ text: \"닫기\", BtnColor: GRAY6, type: 0 });\n  }, [filepath.file, commandInputList[0].content, commandInputList[0].type]);\n\n  const onClickClose = () => {\n    switch (CloseData.type) {\n      case 0:\n        setVisibleRoute(false);\n        break;\n      case 1:\n        alert(\"[필수] 배경 사진을 선택해주세요.\");\n        break;\n      case 2:\n        alert(\"[필수] 내용을 입력해주세요.\");\n        break;\n      default:\n        if (titleRef.current.value === \"\") {\n          alert(\"코스 제목을 입력해주세요.\");\n          break;\n        } else if (descRef.current.value === \"\") {\n          alert(\"간단한 소개를 입력해주세요.\");\n          break;\n        } else {\n          setLoading(true);\n          setTimeout(() => {\n            setLoading(false);\n            titleRef.current.value = \"\";\n            descRef.current.value = \"\";\n            setFilepath(FilePathInit);\n            setCommandInputList(getItems(1));\n            alert(\"생성완료~!\")\n          }, 1000);\n          // postfetch(\"/course\", {\n          //   title: titleRef.current.value,\n          //   description: descRef.current.value,\n          //   creator_id: \"0\",\n          //   image: filepath.file,\n          //   content: JSON.stringify(commandInputList),\n          // })\n          //   .then((d) => {\n          //     console.log(d);\n          //   })\n          //   .finally(() => setLoading(false));\n        }\n        break;\n    }\n  };\n  //#endregion\n  return (\n    <>\n      <BottomSheet\n        ref={bottomRef}\n        blocking={false}\n        open={visibleRoute}\n        onDismiss={() => setVisibleRoute(false)}\n        snapPoints={({ minHeight, maxHeight }) => [maxHeight * 0.995]}\n        defaultSnap={({ lastSnap, snapPoints }) => [snapPoints[1]]}\n        onScrollCapture={onScrollCapture}\n        header={\n          <div>\n            <div style={{ fontFamily: \"roboto\", fontWeight: \"bold\", fontSize: 15, color: GRAY7, float: \"left\" }}>\n              추천 코스를 만들어보세요!\n            </div>\n            <div\n              style={{\n                fontFamily: \"roboto\",\n                fontWeight: \"bold\",\n                fontSize: 15,\n                color: CloseData.BtnColor,\n                float: \"right\",\n              }}\n              onClick={onClickClose}\n            >\n              {CloseData.text}\n            </div>\n          </div>\n        }\n        expandOnContentDrag={false}\n      >\n        <div>\n          <InputImage placeholder={\"배경 사진을 선택해주세요!\"} />\n          <div style={{ padding: \"0 16px 80px 16px\" }}>\n            <div style={{ marginTop: -30 }}>\n              <Textarea\n                ref={titleRef}\n                placeholder={\"코스 제목을 입력해주세요.\"}\n                style={{\n                  border: \"none\",\n                  width: \"100%\",\n                  fontSize: 19,\n                  paddingRight: 6,\n                  padding: 2,\n                  fontFamily: \"AppleSDGothic\",\n                  backgroundColor: \"transparent\",\n                  resize: \"none\",\n                  outline: \"none\",\n                }}\n                maxrows={2}\n              />\n              <div style={{ marginTop: 12 }}>\n                <Textarea\n                  ref={descRef}\n                  style={{\n                    border: \"none\",\n                    width: \"100%\",\n                    fontSize: 15,\n                    paddingRight: 6,\n                    fontFamily: \"AppleSDGothic\",\n                    backgroundColor: \"transparent\",\n                    resize: \"none\",\n                    overflow: \"hidden\",\n                    outline: \"none\",\n                  }}\n                  maxrows={3}\n                  placeholder={\"간단한 소개 (최대 3줄)\"}\n                />\n              </div>\n              <BookmarkBtn disable />\n              <ProfileCard address={\"캠퍼스택시\"} title={\"서울시 강남구\"} desc={\"팔로워 3,456명\"} img={\"img\"} disable />\n              <div style={{ marginTop: 6 }}>\n                <CommandArea />\n              </div>\n            </div>\n          </div>\n        </div>\n      </BottomSheet>\n    </>\n  );\n};\n","/Users/macbook/_myProject/campustaxi-2-webview/src/components/card/ProfileCard.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Dialog/AlertDialog.js",["296"],"import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport { useRecoilState } from \"recoil\";\nimport { alertDialogInit, alertDialogState } from \"./../recoil\";\nimport { GRAY6 } from './../../style/index';\n\nexport const AlertDialog = () => {\n  const [alertDialogInfo, setAlertDialogInfo] = useRecoilState(alertDialogState);\n\n  const handleClose = () => {\n    setAlertDialogInfo({ ...alertDialogInfo, visible:false});\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={alertDialogInfo.visible}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\"> {alertDialogInfo.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">{alertDialogInfo.text}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} style={{ color: GRAY6 }}>\n            취소\n          </Button>\n          <Button onClick={alertDialogInfo.handleConfirm} style={{ color: \"#d32f2f\" }}>\n            삭제\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","/Users/macbook/_myProject/campustaxi-2-webview/src/components/modal/CropScreen.js",["297"],"import { useRecoilState } from \"recoil\";\nimport { CropState } from \"./../recoil\";\nimport { useState, useCallback } from \"react\";\nimport { GRAY6, ORANGE, SCREEN_HEIGHT, SCREEN_WIDTH } from \"./../../style/index\";\nimport Cropper from \"react-easy-crop\";\nimport { getCroppedImg } from \"../common/function/getCroppedImg\";\n\nexport const CropScreen = () => {\n  const [crop, setCrop] = useRecoilState(CropState);\n\n  const [cropXY, setCropXY] = useState({ x: 0, y: 0 });\n  const [rotation] = useState(0); //setRotation\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState();\n  const [, setCroppedImage] = useState(); //croppedImage\n\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n\n  const showCroppedImage = useCallback(async () => {\n    try {\n      const croppedImage = await getCroppedImg(crop.previewURL, croppedAreaPixels, rotation);\n      setCroppedImage(croppedImage);\n      setCrop({ visible: false, file: croppedImage, previewURL: croppedImage });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [croppedAreaPixels, rotation]);\n\n  return (\n    <div>\n      {/* 바탕사진 수정 창 */}\n      {crop.visible ? (\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            width: SCREEN_WIDTH,\n            height: SCREEN_HEIGHT,\n            zIndex: 4,\n            backgroundColor: \"white\",\n          }}\n        >\n          <div\n            onClick={onCropComplete}\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              padding: \"12px 0px\",\n              color: ORANGE,\n              position: \"relative\",\n              zIndex: 20,\n              backgroundColor: \"white\",\n            }}\n          >\n            <div style={{ paddingLeft: 16, color: GRAY6 }} onClick={() => setCrop({ ...crop, visible: false })}>\n              취소\n            </div>\n            <div style={{ paddingRight: 16 }} onClick={showCroppedImage}>\n              완료\n            </div>\n          </div>\n          <Cropper\n            image={crop.previewURL}\n            crop={cropXY}\n            zoom={zoom}\n            aspect={415 / 200}\n            onCropChange={setCropXY}\n            onCropComplete={onCropComplete}\n            onZoomChange={setZoom}\n          />\n        </div>\n      ) : (\n        false\n      )}\n    </div>\n  );\n};\n","/Users/macbook/_myProject/campustaxi-2-webview/src/components/modal/CourseProductModal.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/dndFunc.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/common/function/localStorageEffect.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/index.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/common/index.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/style/index.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/card/PositionCard.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/list/CouseList.js",["298","299","300","301","302","303"],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/common/function/getCroppedImg.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Icon/ProfileIcon.js",["304"],"import { Icon } from \"./../common/Icon\";\n\nexport const ProfileIcon = ({ size, icon }) => (\n  <div style={{ height: size == \"sm\" ? 50 : 58 }}>\n    <div\n      onClick={() => {}}\n      style={{\n        ...inlineStyle.noStyleBtn,\n        border: `3px solid white`,\n        borderRadius: 200,\n        backgroundColor: \"white\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        display: \"flex\",\n        width: size === \"sm\" ? 44 : 52,\n        height: size === \"sm\" ? 44 : 52,\n      }}\n    >\n      <img\n        alt={' '}\n        width={size === \"sm\" ? 40 : 48}\n        height={size === \"sm\" ? 40 : 48}\n        style={{ borderRadius: 200 }}\n        src={\"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\"}\n      ></img>\n    </div>\n    {icon ? (\n      <div\n        style={{\n          position: \"relative\",\n          marginTop: size === \"sm\" ? 26 : 30,\n          marginLeft: size === \"sm\" ? 26 : 30,\n          height: size === \"sm\" ? 16 : 18,\n          width: size === \"sm\" ? 16 : 18,\n          backgroundColor: \"#0075FF\",\n          borderStyle: \"solid\",\n          borderColor: \"white\",\n          borderWidth: 1.5,\n          borderRadius: 20,\n          alignItems: \"center\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          top: -52,\n          left: 8,\n        }}\n      >\n        <Icon name={icon} color={\"white\"} size={\"xs\"} />\n      </div>\n    ) : (\n      false\n    )}\n  </div>\n);\nconst inlineStyle = {\n  noStyleBtn: { backgroundColor: \"transparent\", border: \"none\", fontSize: 15, fontWeight: \"normal\", width: \"3em\" },\n};\n","/Users/macbook/_myProject/campustaxi-2-webview/src/components/common/Icon.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandArea.js",["305","306","307","308","309"],"import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Icon } from \"../common/Icon\";\nimport { useRecoilState } from \"recoil\";\nimport { alertDialogInit, alertDialogState, commandInputListState, commandWindowState, placePosState } from \"../recoil\";\nimport { FadeDiv } from \"../FadeDiv\";\nimport { CommandListRenderItem } from \"./CommandInput/CommandListRenderItem\";\nimport { getItems, getItemStyle, getListStyle, onDragEnd } from \"./CommandInput/dndFunc\";\nimport { useCallback, useEffect } from \"react\";\nimport { posInit } from \"../common\";\nimport { CItem } from \"./CommandInput/CItem\";\nimport { deleteModePosState } from \"./../recoil\";\nimport Button from \"@mui/material/Button\";\nimport { Rowdot } from \"./../Icon/Rowdot\";\n\nexport const CommandArea = ({}) => {\n  const [deleteMode, setDeleteMode] = useRecoilState(deleteModePosState);\n  const [commandInputList, setCommandInputList] = useRecoilState(commandInputListState);\n  const [alertDialogInfo, setAlertDialogInfo] = useRecoilState(alertDialogState);\n  const [commandWindow] = useRecoilState(commandWindowState);\n  const [placePos, setPlacePos] = useRecoilState(placePosState);\n\n  //#region 명령어입력창 마지막는 무조건 텍스트(text,h1,h2,h3)로\n  useEffect(() => {\n    const type = commandInputList[commandInputList.length - 1].type;\n    if (type !== \"text\" && type !== \"h1\" && type !== \"h2\" && type !== \"h3\") {\n      setCommandInputList([...commandInputList, ...getItems(1, commandInputList.length + 1, \"text\")]);\n    }\n  }, [commandInputList.length]);\n  //#endregion\n  //#region 장소 선택 후 돌아올떄 반영\n  useEffect(() => {\n    if (placePos.id !== -1) {\n      let i = commandWindow.index;\n      setCommandInputList([\n        ...commandInputList.slice(0, i + 1),\n        ...getItems(1, commandInputList.length, \"place\", placePos),\n        ...commandInputList.slice(i + 1, 999),\n      ]);\n      setPlacePos(posInit);\n    }\n  }, []);\n  //#endregion\n  //#region 명령어창 UI\n  const CommandRect = useCallback(() => {\n    return (\n      <FadeDiv\n        visible={commandWindow.visible}\n        style={{ position: \"absolute\", top: commandWindow.top, left: commandWindow.left, zIndex: 9999 }}\n      >\n        <div style={{ height: commandWindow.height, width: 260, overflow: \"scroll\" }}>\n          <CommandListRenderItem img={\"text\"} title={\"#텍스트, #text\"} desc={\"일반 텍스트로 글을 작성하세요.\"} />\n          <CommandListRenderItem img={\"place\"} title={\"#장소, #place\"} desc={\"지도에서 장소를 선택하세요.\"} />\n          <CommandListRenderItem img={\"product\"} title={\"#상품, #product\"} desc={\"네이버샵의 상품을 선택하세요.\"} />\n          <CommandListRenderItem img={\"image\"} title={\"#이미지, #image\"} desc={\"이미지를 업로드해보세요.\"} />\n          <CommandListRenderItem img={\"h1\"} title={\"#큰 제목, h1\"} desc={\"큰 제목으로 글을 시작하세요.\"} />\n          <CommandListRenderItem img={\"h2\"} title={\"#부제목, #h2\"} desc={\"부제목으로 글을 시작하세요.\"} />\n          <CommandListRenderItem img={\"h3\"} title={\"#소제목 #h3\"} desc={\"소주제로 글을 시작하세요.\"} />\n          <CommandListRenderItem img={\"tag\"} title={\"#태그, #tag\"} desc={\"태그를 걸어 다른 사용자와 공유하세요.\"} />\n          <CommandListRenderItem img={\"contour\"} title={\"#구분선, #contour\"} desc={\"블록을 구분선으로 나눕니다.\"} />\n          {/* <CommandListRenderItem img={\"emoji\"} title={\"#이모지, #emoji\"} desc={\"텍스트로 넣을 이모지 선택하세요.\"} /> */}\n          <CommandListRenderItem img={\"red\"} title={\"#빨간색 글씨, #red\"} desc={\"빨간색으로 글을 작성하세요.\"} />\n          <CommandListRenderItem img={\"blue\"} title={\"#파란색 글씨, #blue\"} desc={\"파란색으로 글을 작성하세요.\"} />\n          <CommandListRenderItem img={\"brown\"} title={\"#갈색 글씨, #yellow\"} desc={\"갈색으로 글을 작성하세요.\"} />\n          <CommandListRenderItem img={\"purple\"} title={\"#보라색 글씨, #purple\"} desc={\"보라색으로 글을 작성하세요.\"} />\n          <CommandListRenderItem\n            img={\"yellow\"}\n            title={\"#노란색 배경, #yellow-background\"}\n            desc={\"노란색 배경으로 글을 작성하세요.\"}\n          />\n          <CommandListRenderItem\n            img={\"orange\"}\n            title={\"#주황색 배경, #orange-background\"}\n            desc={\"주황색 배경으로 글을 작성하세요.\"}\n          />\n          <CommandListRenderItem\n            img={\"gray\"}\n            title={\"#회색 배경, #gray-background\"}\n            desc={\"회색 배경으로 글을 작성하세요.\"}\n          />\n        </div>\n        {/* <div>#인용</div> */}\n        {/* <div>#콜아웃</div> */}\n        {/* <div>#사용자 멘션하기</div> */}\n        {/* <div>#동영상</div> */}\n        {/* <div>#코드</div> */}\n        {/* <div>#파일</div> */}\n        {/* <div>#북마크</div> */}\n      </FadeDiv>\n    );\n  }, [commandWindow.visible, commandWindow.left, commandWindow.top]);\n  //#endregion\n  //#region 블록 하나 삭제\n  const onClickDelete = (i, item) => {\n    if (!alertDialogInfo.visible) {\n      setAlertDialogInfo({\n        visible: true,\n        title: \"\",\n        text: \"정말 삭제하시겠습니까?\",\n        handleConfirm: () => {\n          const list = [...commandInputList.slice(0, i), ...commandInputList.slice(i + 1, 999)];\n          setCommandInputList(list.length > 0 ? list : [...getItems(1, 1, \"text\", \"\")]);\n          setAlertDialogInfo(alertDialogInit);\n        },\n      });\n      setDeleteMode({ ...deleteMode, index: i });\n    }\n  };\n\n  //#endregion\n  return (\n    <div style={{ paddingBottom: 300 }}>\n      <CommandRect />\n      <DragDropContext onDragEnd={(r) => onDragEnd(r, commandInputList, setCommandInputList)}>\n        <Droppable droppableId=\"droppable\">\n          {(provided, snapshot) => (\n            <div ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\n              {commandInputList.map((item, index) => (\n                <Draggable key={item.id} draggableId={item.id} index={index}>\n                  {(provided, snapshot) => {\n                    return (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\n                      >\n                        <div\n                          style={{\n                            display: \"flex\",\n                            alignItems: \"flex-start\",\n                            justifyItems: \"center\",\n                            marginTop: 8,\n                          }}\n                        >\n                          <div\n                            style={{\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              justifyItems: \"center\",\n                              marginRight: 8,\n                              marginTop: 7,\n                              height: 10,\n                            }}\n                          >\n                            {deleteMode.visible ? (\n                              <div onClick={() => onClickDelete(index, item)}>\n                                <Icon name={\"faTrash\"} type={\"light\"} />\n                              </div>\n                            ) : (\n                              <Rowdot />\n                            )}\n                          </div>\n                          <div\n                            style={\n                              alertDialogInfo.visible && deleteMode.index === index\n                                ? {\n                                    borderStyle: \"solid\",\n                                    borderWidth: 2,\n                                    borderRadius: 3,\n                                    borderColor: \"#d32f2f\",\n                                  }\n                                : { padding: 1.5 }\n                            }\n                          >\n                            <CItem index={index} data={item} />\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  }}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <DeleteBlock />\n    </div>\n  );\n};\n\nconst DeleteBlock = ({}) => {\n  const [deleteMode, setDeleteMode] = useRecoilState(deleteModePosState);\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: \"8%\",\n        left: \"4%\",\n      }}\n      onClick={() => setDeleteMode({ visible: !deleteMode.visible, index: -1 })}\n    >\n      <Button style={{ textTransform: \"none\" }} variant={deleteMode.visible ? \"contained\" : \"outlined\"} color=\"error\">\n        <Icon name={\"faTrash\"} color={deleteMode.visible ? \"white\" : \"#d32f2f\"} />\n        <div style={{ marginLeft: 6, fontFamily: \"roboto\" }}>삭제모드</div>\n      </Button>\n    </div>\n  );\n};\n","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/InputImage.js",["310","311","312","313"],"import { SCREEN_WIDTH } from \"../../style\";\nimport { useState, useEffect } from \"react\";\nimport { CropInit, CropState, FilePathInit, FilePathState } from \"../recoil\";\nimport { useRecoilState } from \"recoil\";\nimport { Icon } from \"../common/Icon\";\nimport { loadXHR } from './CommandInput/CImage';\n\nexport const InputImage = ({ placeholder }) => {\n  const [crop, setCrop] = useRecoilState(CropState);\n  const [filepath, setFilepath] = useRecoilState(FilePathState);\n  const [isCrop, setIsCrop] = useState(false);\n\n  //#region 앱껏다 키고 캐쉬 초기화 시 이미지 아닌게 들어깄으면 삭제\n  useEffect(() => {\n    loadXHR(filepath.file)\n      .then((f) => {\n        try {\n          if (typeof f.type === \"string\") console.debug(f.type.includes(\"image\"), f);\n        } catch (e) {}\n      })\n      .catch(() => setFilepath(FilePathInit));\n  }, []);\n  //#endregion\n\n  //#region 편집 후 가져오기\n  useEffect(() => {\n    if (!crop.visible && isCrop) {\n      setFilepath({ file: crop.file, previewURL: crop.previewURL, type: \"CourseCreateMainImg\" });\n      setIsCrop(false);\n      setCrop(CropInit);\n    }\n  }, [crop.visible]);\n  //#endregion\n  const onChangeInput = (e) => {\n    try {\n      e.preventDefault();\n      let reader = new FileReader();\n      let file = e.target.files[0];\n      reader.onloadend = () => {\n        setIsCrop(true);\n        setCrop({ visible: true, file: file, previewURL: reader.result });\n      };\n      reader.readAsDataURL(file);\n    } catch (e) {\n      setIsCrop(false);\n      setCrop(CropInit);\n    }\n  };\n  return (\n    <div>\n      <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\n        {/* 바탕사진 및 바탕 임시 회색 */}\n        <div\n          style={{\n            width: SCREEN_WIDTH,\n            backgroundImage:\n              filepath.previewURL != \"\"\n                ? `linear-gradient(to bottom,rgba(0,0,0,0),rgba(255,255,255, 1)),url(${filepath.previewURL})`\n                : `linear-gradient(to bottom,rgba(200,200,200,1),rgba(200,200,200, 1),rgba(200,200,200, 1),rgba(255,255,255, 0.2))`,\n            backgroundSize: \"cover\",\n            backgroundRepeat: \"no-repeat\",\n            height: (SCREEN_WIDTH * 200) / 415,\n          }}\n        />\n        {/* 바탕사진 선택버튼 */}\n        <div style={{ position: \"relative\", top: -110 }}>\n          {filepath.previewURL != \"\" ? (\n            <div style={{ display: \"flex\" }}>\n              <div\n                style={inputFileCSSNone}\n                onClick={() => {\n                  setCrop({ visible: true, file: filepath.file, previewURL: filepath.previewURL });\n                  setIsCrop(true);\n                }}\n              >\n                <Icon name={\"faEdit\"} size={\"lg\"} color={\"rgba(73,80,87,0.5)\"} />\n              </div>\n              <div style={{ ...inputFileCSSNone, marginLeft: 5 }} onClick={() => setFilepath(FilePathInit)}>\n                <Icon name={\"faTrash\"} size={\"lg\"} color={\"rgba(73,80,87,0.5)\"} />\n              </div>\n            </div>\n          ) : (\n            <label style={inputFileCSS} htmlFor=\"input-file\">\n              {placeholder}\n            </label>\n          )}\n        </div>\n        <input\n          value={\"\"}\n          type=\"file\"\n          id=\"input-file\"\n          style={{ display: \"none\" }}\n          accept=\"image/*\"\n          onChange={onChangeInput}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst inputFileCSSNone = {\n  padding: \"6px 12px\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  display: \"flex\",\n  backgroundColor: \"rgba(255,255,255,0.8)\",\n  borderRadius: \"20px\",\n  color: \"white\",\n  cursor: \"pointer\",\n};\nconst inputFileCSS = {\n  fontSize: 13,\n  padding: \"6px 25px\",\n  backgroundColor: \"#FF6600\",\n  borderRadius: \"4px\",\n  color: \"white\",\n  cursor: \"pointer\",\n};\n","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CImage.js",["314","315","316"],"import { useEffect, useState } from \"react\";\nimport { SCREEN_WIDTH } from \"./../../../style/index\";\nimport { commandInputListState, CropInit, CropState } from \"./../../recoil\";\nimport { useRecoilState } from \"recoil\";\nimport { Icon } from \"./../../common/Icon\";\n\nexport const loadXHR = (url)=>{\n  return new Promise((resolve, reject) => {\n    try {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", url);\n      xhr.responseType = \"blob\";\n      xhr.onerror = () => {\n        // reject(`Network error: ${event}`);\n        reject();\n      };\n      xhr.onload = () => {\n        if (xhr.status === 200) {\n          resolve(xhr.response);\n        } else {\n          // reject(`XHR load error: ${xhr.statusText}`);\n          reject(\"\");\n        }\n      };\n      xhr.send();\n    } catch (err) {\n      // reject(err.message);\n      reject(\"\");\n    }\n  });\n}\n\nexport const CImage = ({ index }) => {\n  const [commandInputList, setCommandInputList] = useRecoilState(commandInputListState);\n  const [crop, setCrop] = useRecoilState(CropState);\n  // const [filepath, setFilepath] = useState({ file: \"\", previewURL: \"\" });\n  const [isCrop, setIsCrop] = useState(false);\n  const filepath = commandInputList[index].content;\n\n  //#region 앱껏다 키고 캐쉬 초기화 시 이미지 아닌게 들어깄으면 삭제\n  useEffect(() => {\n    loadXHR(filepath.file)\n      .then((f) => {\n        try {\n          if (typeof f.type === \"string\") console.debug(f.type.includes(\"image\"), f);\n        } catch (e) {}\n      })\n      .catch(() => {\n        setCommandInputList([\n          ...commandInputList.slice(0, index),\n          { ...commandInputList[index], content: { file: \"\", previewURL: \"\" } },\n          ...commandInputList.slice(index + 1, 999),\n        ]);\n      });\n  }, []);\n  //#endregion\n  //#region 편집 후 가져오기\n  useEffect(() => {\n    if (!crop.visible && isCrop) {\n      setCommandInputList([\n        ...commandInputList.slice(0, index),\n        { ...commandInputList[index], content: { file: crop.file, previewURL: crop.previewURL } },\n        ...commandInputList.slice(index + 1, 999),\n      ]);\n      // setFilepath({ file: crop.file, previewURL: crop.previewURL });\n      setIsCrop(false);\n      setCrop(CropInit);\n    }\n  }, [crop.visible]);\n  //#endregion\n  const onDeletePhoto = () => {\n    setCommandInputList([\n      ...commandInputList.slice(0, index),\n      { ...commandInputList[index], content: { file: \"\", previewURL: \"\" } },\n      ...commandInputList.slice(index + 1, 999),\n    ]);\n  };\n\n  const onChangeInput = (e) => {\n    try {\n      e.preventDefault();\n      let reader = new FileReader();\n      let file = e.target.files[0];\n      reader.onloadend = () => {\n        setIsCrop(true);\n        setCrop({ visible: true, file: file, previewURL: reader.result });\n      };\n      reader.readAsDataURL(file);\n    } catch (e) {\n      setIsCrop(false);\n      setCrop(CropInit);\n    }\n  };\n\n  const style =\n    filepath.previewURL !== \"\"\n      ? {\n          backgroundImage: `url(${filepath.previewURL})`,\n          backgroundColor: \"transparent\",\n        }\n      : {\n          backgroundColor: \"rgba(0,0,0,0.1)\", //transparent\n        };\n  return (\n    <div>\n      <div>\n        {/* 바탕사진 및 바탕 임시 회색 */}\n        <div\n          style={{\n            ...style,\n            height: ((SCREEN_WIDTH - 64) * 200) / 415,\n            width: SCREEN_WIDTH - 64,\n            backgroundSize: \"cover\",\n            backgroundRepeat: \"no-repeat\",\n          }}\n        />\n        {/* 바탕사진 선택버튼 */}\n        <div\n          style={{\n            position: \"relative\",\n            height: 0,\n            left: filepath.previewURL == \"\" ? (SCREEN_WIDTH - 175 - 64) / 2 : (SCREEN_WIDTH - 100 - 64) / 2,\n            top: -(((SCREEN_WIDTH - 64) * 200) / 415 / 2 + 15),\n          }}\n        >\n          {filepath.previewURL !== \"\" ? (\n            <div style={{ display: \"flex\" }}>\n              <div\n                style={inputFileCSSNone}\n                onClick={() => {\n                  setCrop({ visible: true, file: filepath.file, previewURL: filepath.previewURL });\n                  setIsCrop(true);\n                }}\n              >\n                <Icon name={\"faEdit\"} size={\"lg\"} color={\"rgba(73,80,87,0.5)\"} />\n              </div>\n              <div style={{ ...inputFileCSSNone, marginLeft: 5 }} onClick={onDeletePhoto}>\n                <Icon name={\"faTrash\"} size={\"lg\"} color={\"rgba(73,80,87,0.5)\"} />\n              </div>\n            </div>\n          ) : (\n            <label style={inputFileCSS} htmlFor={\"input-file\" + index}>\n              사진을 선택해주세요.\n            </label>\n          )}\n        </div>\n        <input\n          type=\"file\"\n          id={\"input-file\" + index}\n          value={\"\"}\n          style={{ display: \"none\" }}\n          accept=\"image/*\"\n          onChange={onChangeInput}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst inputFileCSSNone = {\n  padding: \"6px 12px\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  display: \"flex\",\n  backgroundColor: \"rgba(255,255,255,0.8)\",\n  borderRadius: \"20px\",\n  color: \"white\",\n  cursor: \"pointer\",\n};\nconst inputFileCSS = {\n  fontSize: 13,\n  padding: \"6px 25px\",\n  backgroundColor: \"#FF6600\",\n  borderRadius: \"4px\",\n  color: \"white\",\n  cursor: \"pointer\",\n};\n","/Users/macbook/_myProject/campustaxi-2-webview/src/components/PathInfo.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/common/function/getPath.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Icon/Rowdot.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CItem.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CommandListRenderItem.js",["317"],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CProduct.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CContour.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CTag.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CH.js",["318","319","320","321","322","323"],"import { GRAY7, SCREEN_WIDTH } from \"../../../style\";\nimport { useState, useCallback, useRef } from \"react\";\nimport TextareaAutosize from \"react-autosize-textarea\";\nimport { offset } from \"caret-pos\";\nimport { useRecoilState } from \"recoil\";\nimport { commandInputListState, commandWindowState } from \"../../recoil\";\nimport { platform } from './CTextarea';\n\nexport const CH = ({ index, type = \"h1\" }) => {\n  const [placeholder, setPlaceHolder] = useState(\"\");\n  const [rowIndex, setRowIndex] = useState({ height: 0, index: 0 });\n  const [beforeInput, setBeforeInput] = useState(\"\");\n  const [commandWindow, setCommandWindow] = useRecoilState(commandWindowState);\n  const [commandInputList, setCommandInputList] = useRecoilState(commandInputListState);\n\n  const ref = useRef();\n  const onChangeInput = useCallback(\n    (e) => {\n      //#region #누르면 명령어창 보여줌 || 안드로이드 설정(한번에 여러개들어옴)\n      if (\n        e.nativeEvent.data == \"#\" ||\n        (platform === \"android\" && !!e.nativeEvent.data && e.nativeEvent.data.includes(\"#\"))\n      ) {\n        let { left, top, height } = offset(ref.current);\n        //#region 가로이동 제한 & height 화면 안 넘어가게 제한\n        // 가로제한\n        if (left + 260 > SCREEN_WIDTH && left < 260) {\n          left = commandWindow.left;\n        } else if (SCREEN_WIDTH - left < 260 && left > 260) left -= 280;\n        // 세로제한\n        let heightCommand = 448;\n        top -= heightCommand;\n        if (top < 0) {\n          heightCommand += top - height;\n          top = 0;\n        }\n        //#endregion\n        setCommandWindow({\n          visible: true,\n          top: top,\n          left: left,\n          index: index,\n          height: heightCommand,\n        });\n      } else {\n        setCommandWindow({ ...commandWindow, visible: false, index: -1, height: 0 });\n      }\n      //#region 내용업데이트\n      setCommandInputList([\n        ...commandInputList.slice(0, index),\n        { ...commandInputList[index], content: e.target.value },\n        ...commandInputList.slice(index + 1, 999),\n      ]);\n      //#endregion\n      setBeforeInput(e.target.value);\n      //#endregion #누르면 명령어창 보여줌\n    },\n    [rowIndex, beforeInput, commandWindow, index]\n  );\n  const onBlur = () => {\n    setPlaceHolder(\"\");\n  };\n  const onFocus = () => {\n    if (commandWindow.index != index) {\n      if (commandWindow.visible) setCommandWindow({ ...commandWindow, visible: false, index: index });\n      else setCommandWindow({ ...commandWindow, index: index });\n    }\n    setPlaceHolder('명령어 사용시 \"#\"을 입력하세요.');\n  };\n\n  const style =\n    type == \"h1\" ? { fontSize: 21, fontWeight: \"bold\" } : type == \"h2\" ? { fontSize: 18 } : { fontSize: 16 };\n  return (\n    <TextareaAutosize\n      ref={ref}\n      onFocus={onFocus}\n      onChange={onChangeInput}\n      placeholder={placeholder}\n      onBlur={onBlur}\n      defaultValue={commandInputList[index].content}\n      style={{\n        ...style,\n        width: SCREEN_WIDTH - 60,\n        height: \"20px\",\n        border: \"none\",\n        color: GRAY7,\n        resize: \"none\",\n        fontFamily: \"AppleSDGothic\",\n        overflow: \"hidden\",\n        outline: \"none\",\n      }}\n    />\n  );\n};\n","/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CTextarea.js",["324","325","326","327"],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/CommandInput/CPlace.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/card/CourseCard.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/card/RoomCard.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/switch.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/Input/radio.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/common/function/getPlatform.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/FadeDiv/index.js",["328","329"],"import { useState, useEffect } from \"react\";\nimport { GRAY6, GRAY1, GRAY2 } from \"./../../style/index\";\nimport { useRecoilState } from 'recoil';\nimport { commandWindowState } from \"../recoil\";\n\nconst box_active = {\n  border: `1px solid ${GRAY2}`,\n  borderRadius: 4,\n  padding: 8,\n  background: `white`,\n  opacity: \"1\",\n  transition: \"opacity 200ms\",\n};\n\nconst box_hidden = {\n  border: `1px solid ${GRAY2}`,\n  borderRadius: 4,\n  padding: 8,\n  background: `white`,\n  opacity: \"0\",\n  transition: \"opacity 100ms\",\n};\n\nexport const FadeDiv = ({ visible, children, style }) => {\n  const [select, setSelect] = useState(false);\n  const [disable, setDisable] = useState(true);\n  const [commandWindow, ] = useRecoilState(commandWindowState);\n  useEffect(() => {\n    handleClick(visible);\n    if (visible) setDisable(false);\n    else setTimeout(() => setDisable(true), 100);\n  }, [visible, commandWindow]);\n  const handleClick = (visible) => {\n    setSelect(visible);\n  };\n  if (disable) return <></>;\n  return <div style={select ? { ...box_active, ...style } : { ...box_hidden, ...style }}>{children}</div>;\n};\n","/Users/macbook/_myProject/campustaxi-2-webview/src/components/common/Tag.js",[],"/Users/macbook/_myProject/campustaxi-2-webview/src/components/common/prettyDate.js",["330"],"// 로컬 시간을 감안하여 toJSON으로 변환.\nDate.prototype.toJSON = function () {\n  var timezoneOffsetInHours = -(this.getTimezoneOffset() / 60); //UTC minus local time\n  var sign = timezoneOffsetInHours >= 0 ? \"+\" : \"-\";\n  var leadingZero = Math.abs(timezoneOffsetInHours) < 10 ? \"0\" : \"\";\n  var correctedDate = new Date(\n    this.getFullYear(),\n    this.getMonth(),\n    this.getDate(),\n    this.getHours(),\n    this.getMinutes(),\n    this.getSeconds(),\n    this.getMilliseconds()\n  );\n  correctedDate.setHours(this.getHours() + timezoneOffsetInHours);\n  var iso = correctedDate.toISOString().replace(\"Z\", \"\");\n  return iso + sign + leadingZero + Math.abs(timezoneOffsetInHours).toString() + \":00\";\n};\n\nexport const prettyDate = (dateString) => {\n  const str = dateString;\n  const list = str.split(\".\")[0].split(\"T\");\n  const YMD = list[0].split(\"-\"); //[0]년[1]월[2]일\n  const HMS = list[1].split(\":\"); //[0]시[1]분[2]초\n  const day = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"][new Date(str).getDay()];\n\n  const today = new Date().toJSON();\n  const list_today = today.split(\".\")[0].split(\"T\");\n  const YMD_today = list_today[0].split(\"-\"); //[0]년[1]월[2]일\n  // const HMS_today = list_today[1].split(\":\"); //[0]시[1]분[2]초\n\n  if (YMD[0] !== YMD_today[0] || YMD[1] !== YMD_today[1] || Number(YMD[2]) < Number(YMD_today[2]))\n    return `${Number(YMD[0])}년${Number(YMD[1])}월${Number(YMD[2])}일`;\n  else if (YMD[2] === YMD_today[2]) return `오늘 ${Number(HMS[0])}시${Number(HMS[1])}분`;\n  else if (Number(YMD[2]) === Number(YMD_today[2]) + 1) return `내일 ${Number(HMS[0])}시${Number(HMS[1])}분`;\n  else if (Number(YMD[2]) === Number(YMD_today[2]) + 2)\n    return `모레 ${Number(YMD[2])}일 ${Number(HMS[0])}시${Number(HMS[1])}분`;\n  else return `이번주 ${day}요일 ${Number(HMS[0])}시${Number(HMS[1])}분`;\n};\n",{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","replacedBy":"334"},{"ruleId":"335","severity":1,"message":"336","line":12,"column":10,"nodeType":"337","messageId":"338","endLine":12,"endColumn":16},{"ruleId":"335","severity":1,"message":"339","line":13,"column":10,"nodeType":"337","messageId":"338","endLine":13,"endColumn":26},{"ruleId":"335","severity":1,"message":"340","line":13,"column":28,"nodeType":"337","messageId":"338","endLine":13,"endColumn":36},{"ruleId":"335","severity":1,"message":"341","line":3,"column":10,"nodeType":"337","messageId":"338","endLine":3,"endColumn":19},{"ruleId":"335","severity":1,"message":"342","line":2,"column":21,"nodeType":"337","messageId":"338","endLine":2,"endColumn":27},{"ruleId":"343","severity":1,"message":"344","line":18,"column":6,"nodeType":"345","endLine":18,"endColumn":27,"suggestions":"346"},{"ruleId":"335","severity":1,"message":"347","line":51,"column":17,"nodeType":"337","messageId":"338","endLine":51,"endColumn":25},{"ruleId":"343","severity":1,"message":"348","line":79,"column":6,"nodeType":"345","endLine":79,"endColumn":8,"suggestions":"349"},{"ruleId":"343","severity":1,"message":"350","line":100,"column":6,"nodeType":"345","endLine":100,"endColumn":46,"suggestions":"351"},{"ruleId":"343","severity":1,"message":"352","line":110,"column":6,"nodeType":"345","endLine":110,"endColumn":23,"suggestions":"353"},{"ruleId":"354","severity":1,"message":"355","line":236,"column":28,"nodeType":"356","messageId":"357","endLine":236,"endColumn":29,"suggestions":"358"},{"ruleId":"354","severity":1,"message":"355","line":236,"column":46,"nodeType":"356","messageId":"357","endLine":236,"endColumn":47,"suggestions":"359"},{"ruleId":"354","severity":1,"message":"355","line":236,"column":58,"nodeType":"356","messageId":"357","endLine":236,"endColumn":59,"suggestions":"360"},{"ruleId":"354","severity":1,"message":"355","line":236,"column":61,"nodeType":"356","messageId":"357","endLine":236,"endColumn":62,"suggestions":"361"},{"ruleId":"354","severity":1,"message":"355","line":236,"column":70,"nodeType":"356","messageId":"357","endLine":236,"endColumn":71,"suggestions":"362"},{"ruleId":"354","severity":1,"message":"355","line":238,"column":63,"nodeType":"356","messageId":"357","endLine":238,"endColumn":64,"suggestions":"363"},{"ruleId":"364","severity":1,"message":"365","line":5,"column":28,"nodeType":"366","messageId":"367","endLine":5,"endColumn":30},{"ruleId":"335","severity":1,"message":"368","line":2,"column":20,"nodeType":"337","messageId":"338","endLine":2,"endColumn":29},{"ruleId":"335","severity":1,"message":"369","line":3,"column":10,"nodeType":"337","messageId":"338","endLine":3,"endColumn":18},{"ruleId":"335","severity":1,"message":"370","line":6,"column":10,"nodeType":"337","messageId":"338","endLine":6,"endColumn":17},{"ruleId":"335","severity":1,"message":"371","line":9,"column":10,"nodeType":"337","messageId":"338","endLine":9,"endColumn":14},{"ruleId":"335","severity":1,"message":"372","line":9,"column":16,"nodeType":"337","messageId":"338","endLine":9,"endColumn":23},{"ruleId":"335","severity":1,"message":"373","line":11,"column":10,"nodeType":"337","messageId":"338","endLine":11,"endColumn":16},{"ruleId":"335","severity":1,"message":"374","line":11,"column":18,"nodeType":"337","messageId":"338","endLine":11,"endColumn":27},{"ruleId":"375","severity":1,"message":"376","line":21,"column":35,"nodeType":"377","messageId":"367","endLine":21,"endColumn":37},{"ruleId":"375","severity":1,"message":"376","line":31,"column":32,"nodeType":"377","messageId":"367","endLine":31,"endColumn":34},{"ruleId":"335","severity":1,"message":"378","line":13,"column":21,"nodeType":"337","messageId":"338","endLine":13,"endColumn":28},{"ruleId":"335","severity":1,"message":"379","line":21,"column":10,"nodeType":"337","messageId":"338","endLine":21,"endColumn":19},{"ruleId":"343","severity":1,"message":"380","line":58,"column":6,"nodeType":"345","endLine":58,"endColumn":76,"suggestions":"381"},{"ruleId":"343","severity":1,"message":"382","line":58,"column":22,"nodeType":"383","endLine":58,"endColumn":49},{"ruleId":"343","severity":1,"message":"382","line":58,"column":51,"nodeType":"383","endLine":58,"endColumn":75},{"ruleId":"335","severity":1,"message":"384","line":9,"column":10,"nodeType":"337","messageId":"338","endLine":9,"endColumn":25},{"ruleId":"343","severity":1,"message":"385","line":29,"column":6,"nodeType":"345","endLine":29,"endColumn":35,"suggestions":"386"},{"ruleId":"335","severity":1,"message":"387","line":6,"column":10,"nodeType":"337","messageId":"338","endLine":6,"endColumn":15},{"ruleId":"335","severity":1,"message":"388","line":6,"column":31,"nodeType":"337","messageId":"338","endLine":6,"endColumn":44},{"ruleId":"335","severity":1,"message":"389","line":10,"column":10,"nodeType":"337","messageId":"338","endLine":10,"endColumn":20},{"ruleId":"335","severity":1,"message":"390","line":10,"column":22,"nodeType":"337","messageId":"338","endLine":10,"endColumn":32},{"ruleId":"335","severity":1,"message":"391","line":10,"column":34,"nodeType":"337","messageId":"338","endLine":10,"endColumn":43},{"ruleId":"335","severity":1,"message":"392","line":10,"column":45,"nodeType":"337","messageId":"338","endLine":10,"endColumn":49},{"ruleId":"375","severity":1,"message":"393","line":4,"column":30,"nodeType":"377","messageId":"367","endLine":4,"endColumn":32},{"ruleId":"364","severity":1,"message":"365","line":15,"column":29,"nodeType":"366","messageId":"367","endLine":15,"endColumn":31},{"ruleId":"343","severity":1,"message":"394","line":28,"column":6,"nodeType":"345","endLine":28,"endColumn":31,"suggestions":"395"},{"ruleId":"343","severity":1,"message":"396","line":41,"column":6,"nodeType":"345","endLine":41,"endColumn":8,"suggestions":"397"},{"ruleId":"343","severity":1,"message":"398","line":90,"column":6,"nodeType":"345","endLine":90,"endColumn":68,"suggestions":"399"},{"ruleId":"364","severity":1,"message":"365","line":183,"column":22,"nodeType":"366","messageId":"367","endLine":183,"endColumn":24},{"ruleId":"343","severity":1,"message":"400","line":22,"column":6,"nodeType":"345","endLine":22,"endColumn":8,"suggestions":"401"},{"ruleId":"343","severity":1,"message":"402","line":32,"column":6,"nodeType":"345","endLine":32,"endColumn":20,"suggestions":"403"},{"ruleId":"375","severity":1,"message":"376","line":57,"column":35,"nodeType":"377","messageId":"367","endLine":57,"endColumn":37},{"ruleId":"375","severity":1,"message":"376","line":67,"column":32,"nodeType":"377","messageId":"367","endLine":67,"endColumn":34},{"ruleId":"343","severity":1,"message":"404","line":55,"column":6,"nodeType":"345","endLine":55,"endColumn":8,"suggestions":"405"},{"ruleId":"343","severity":1,"message":"406","line":69,"column":6,"nodeType":"345","endLine":69,"endColumn":20,"suggestions":"407"},{"ruleId":"375","severity":1,"message":"393","line":122,"column":39,"nodeType":"377","messageId":"367","endLine":122,"endColumn":41},{"ruleId":"335","severity":1,"message":"408","line":19,"column":10,"nodeType":"337","messageId":"338","endLine":19,"endColumn":27},{"ruleId":"335","severity":1,"message":"409","line":11,"column":20,"nodeType":"337","messageId":"338","endLine":11,"endColumn":31},{"ruleId":"375","severity":1,"message":"393","line":21,"column":28,"nodeType":"377","messageId":"367","endLine":21,"endColumn":30},{"ruleId":"343","severity":1,"message":"410","line":58,"column":5,"nodeType":"345","endLine":58,"endColumn":50,"suggestions":"411"},{"ruleId":"375","severity":1,"message":"376","line":64,"column":29,"nodeType":"377","messageId":"367","endLine":64,"endColumn":31},{"ruleId":"375","severity":1,"message":"393","line":72,"column":10,"nodeType":"377","messageId":"367","endLine":72,"endColumn":12},{"ruleId":"375","severity":1,"message":"393","line":72,"column":64,"nodeType":"377","messageId":"367","endLine":72,"endColumn":66},{"ruleId":"335","severity":1,"message":"408","line":16,"column":10,"nodeType":"337","messageId":"338","endLine":16,"endColumn":27},{"ruleId":"375","severity":1,"message":"393","line":29,"column":28,"nodeType":"377","messageId":"367","endLine":29,"endColumn":30},{"ruleId":"343","severity":1,"message":"412","line":70,"column":5,"nodeType":"345","endLine":70,"endColumn":50,"suggestions":"413"},{"ruleId":"375","severity":1,"message":"376","line":76,"column":29,"nodeType":"377","messageId":"367","endLine":76,"endColumn":31},{"ruleId":"335","severity":1,"message":"414","line":2,"column":10,"nodeType":"337","messageId":"338","endLine":2,"endColumn":15},{"ruleId":"335","severity":1,"message":"415","line":2,"column":17,"nodeType":"337","messageId":"338","endLine":2,"endColumn":22},{"ruleId":"416","severity":1,"message":"417","line":2,"column":1,"nodeType":"418","messageId":"367","endLine":18,"endColumn":2},"no-native-reassign",["419"],"no-negated-in-lhs",["420"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'CircularProgress' is defined but never used.","'Collapse' is defined but never used.","'SearchBar' is defined but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'favorite.enterCount'. Either exclude it or remove the dependency array. Outer scope values like 'favorite.enterCount' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["421"],"'setMyPos' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setChatRoomList'. Either include it or remove the dependency array.",["422"],"React Hook useEffect has missing dependencies: 'endPos', 'navermaps.LatLng', 'navermaps.LatLngBounds', 'setPath', and 'startPos'. Either include them or remove the dependency array.",["423"],"React Hook useEffect has missing dependencies: 'navermaps.LatLng' and 'navermaps.LatLngBounds'. Either include them or remove the dependency array.",["424"],"no-useless-escape","Unnecessary escape character: \\\".","TemplateElement","unnecessaryEscape",["425","426"],["427","428"],["429","430"],["431","432"],["433","434"],["435","436"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'useEffect' is defined but never used.","'CropInit' is defined but never used.","'loadXHR' is defined but never used.","'crop' is assigned a value but never used.","'setCrop' is assigned a value but never used.","'isCrop' is assigned a value but never used.","'setIsCrop' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'useMemo' is defined but never used.","'postfetch' is defined but never used.","React Hook useEffect has missing dependencies: 'CloseData.type', 'commandInputList', and 'filepath.type'. Either include them or remove the dependency array.",["437"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'alertDialogInit' is defined but never used.","React Hook useCallback has missing dependencies: 'crop.previewURL' and 'setCrop'. Either include them or remove the dependency array.",["438"],"'GRAY8' is defined but never used.","'SCREEN_HEIGHT' is defined but never used.","'Navigation' is defined but never used.","'Pagination' is defined but never used.","'Scrollbar' is defined but never used.","'A11y' is defined but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'commandInputList' and 'setCommandInputList'. Either include them or remove the dependency array.",["439"],"React Hook useEffect has missing dependencies: 'commandInputList', 'commandWindow.index', 'placePos', 'setCommandInputList', and 'setPlacePos'. Either include them or remove the dependency array.",["440"],"React Hook useCallback has a missing dependency: 'commandWindow.height'. Either include it or remove the dependency array.",["441"],"React Hook useEffect has missing dependencies: 'filepath.file' and 'setFilepath'. Either include them or remove the dependency array.",["442"],"React Hook useEffect has missing dependencies: 'crop.file', 'crop.previewURL', 'isCrop', 'setCrop', and 'setFilepath'. Either include them or remove the dependency array.",["443"],"React Hook useEffect has missing dependencies: 'commandInputList', 'filepath.file', 'index', and 'setCommandInputList'. Either include them or remove the dependency array.",["444"],"React Hook useEffect has missing dependencies: 'commandInputList', 'crop.file', 'crop.previewURL', 'index', 'isCrop', 'setCommandInputList', and 'setCrop'. Either include them or remove the dependency array.",["445"],"'commandInputColor' is assigned a value but never used.","'setRowIndex' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'commandInputList', 'setCommandInputList', and 'setCommandWindow'. Either include them or remove the dependency array.",["446"],"React Hook useCallback has missing dependencies: 'commandInputList', 'maxrows', 'setCommandInputList', and 'setCommandWindow'. Either include them or remove the dependency array.",["447"],"'GRAY6' is defined but never used.","'GRAY1' is defined but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","no-global-assign","no-unsafe-negation",{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"messageId":"456","fix":"457","desc":"458"},{"messageId":"459","fix":"460","desc":"461"},{"messageId":"456","fix":"462","desc":"458"},{"messageId":"459","fix":"463","desc":"461"},{"messageId":"456","fix":"464","desc":"458"},{"messageId":"459","fix":"465","desc":"461"},{"messageId":"456","fix":"466","desc":"458"},{"messageId":"459","fix":"467","desc":"461"},{"messageId":"456","fix":"468","desc":"458"},{"messageId":"459","fix":"469","desc":"461"},{"messageId":"456","fix":"470","desc":"458"},{"messageId":"459","fix":"471","desc":"461"},{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"482","fix":"483"},{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"490","fix":"491"},{"desc":"492","fix":"493"},"Update the dependencies array to be: []",{"range":"494","text":"495"},"Update the dependencies array to be: [setChatRoomList]",{"range":"496","text":"497"},"Update the dependencies array to be: [startPos.place_name, endPos.place_name, endPos, startPos, navermaps.LatLngBounds, navermaps.LatLng, setPath]",{"range":"498","text":"499"},"Update the dependencies array to be: [chatRoomSeleted, navermaps.LatLng, navermaps.LatLngBounds]",{"range":"500","text":"501"},"removeEscape",{"range":"502","text":"503"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"504","text":"505"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"506","text":"503"},{"range":"507","text":"505"},{"range":"508","text":"503"},{"range":"509","text":"505"},{"range":"510","text":"503"},{"range":"511","text":"505"},{"range":"512","text":"503"},{"range":"513","text":"505"},{"range":"514","text":"503"},{"range":"515","text":"505"},"Update the dependencies array to be: [CloseData.type, commandInputList, filepath.file, filepath.type]",{"range":"516","text":"517"},"Update the dependencies array to be: [crop.previewURL, croppedAreaPixels, rotation, setCrop]",{"range":"518","text":"519"},"Update the dependencies array to be: [commandInputList, commandInputList.length, setCommandInputList]",{"range":"520","text":"521"},"Update the dependencies array to be: [commandInputList, commandWindow.index, placePos, setCommandInputList, setPlacePos]",{"range":"522","text":"523"},"Update the dependencies array to be: [commandWindow.visible, commandWindow.top, commandWindow.left, commandWindow.height]",{"range":"524","text":"525"},"Update the dependencies array to be: [filepath.file, setFilepath]",{"range":"526","text":"527"},"Update the dependencies array to be: [crop.file, crop.previewURL, crop.visible, isCrop, setCrop, setFilepath]",{"range":"528","text":"529"},"Update the dependencies array to be: [commandInputList, filepath.file, index, setCommandInputList]",{"range":"530","text":"531"},"Update the dependencies array to be: [commandInputList, crop.file, crop.previewURL, crop.visible, index, isCrop, setCommandInputList, setCrop]",{"range":"532","text":"533"},"Update the dependencies array to be: [setCommandInputList, commandInputList, index, setCommandWindow, commandWindow]",{"range":"534","text":"535"},"Update the dependencies array to be: [setCommandInputList, commandInputList, index, maxrows, setCommandWindow, commandWindow, rowIndex.index, rowIndex.height]",{"range":"536","text":"537"},[702,723],"[]",[2341,2343],"[setChatRoomList]",[3173,3213],"[startPos.place_name, endPos.place_name, endPos, startPos, navermaps.LatLngBounds, navermaps.LatLng, setPath]",[3651,3668],"[chatRoomSeleted, navermaps.LatLng, navermaps.LatLngBounds]",[7906,7907],"",[7906,7906],"\\",[7924,7925],[7924,7924],[7936,7937],[7936,7936],[7939,7940],[7939,7939],[7948,7949],[7948,7948],[8080,8081],[8080,8080],[2690,2760],"[CloseData.type, commandInputList, filepath.file, filepath.type]",[1129,1158],"[crop.previewURL, croppedAreaPixels, rotation, setCrop]",[1491,1516],"[commandInputList, commandInputList.length, setCommandInputList]",[1884,1886],"[commandInputList, commandWindow.index, placePos, setCommandInputList, setPlacePos]",[4364,4426],"[commandWindow.visible, commandWindow.top, commandWindow.left, commandWindow.height]",[809,811],"[filepath.file, setFilepath]",[1065,1079],"[crop.file, crop.previewURL, crop.visible, isCrop, setCrop, setFilepath]",[1724,1726],"[commandInputList, filepath.file, index, setCommandInputList]",[2186,2200],"[commandInputList, crop.file, crop.previewURL, crop.visible, index, isCrop, setCommandInputList, setCrop]",[2105,2150],"[setCommandInputList, commandInputList, index, setCommandWindow, commandWindow]",[2808,2853],"[setCommandInputList, commandInputList, index, maxrows, setCommandWindow, commandWindow, rowIndex.index, rowIndex.height]"]